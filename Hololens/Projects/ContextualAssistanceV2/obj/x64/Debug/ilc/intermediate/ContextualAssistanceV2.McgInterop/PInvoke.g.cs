#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;
using global::Windows.Foundation;
using global::Windows.Foundation.Collections;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 64-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace __Interop
{
	/// <summary>
	/// P/Invoke class for module 'StereoKitC.dll'
	/// </summary>
	public unsafe static partial class StereoKitC_dll
	{
		// Signature, sk_init, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Runtime__StereoKit__Runtime__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_init")]
		public static int sk_init(
					string app_name, 
					global::StereoKit.Runtime__StereoKit preferred_runtime, 
					int fallback)
		{
			// Setup
			byte* unsafe_app_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_app_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(app_name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sk_init(
									unsafe_app_name, 
									preferred_runtime, 
									fallback
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_app_name);
			}
		}

		// Signature, sk_shutdown, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_shutdown")]
		public static void sk_shutdown()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.sk_shutdown();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sk_quit, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_quit")]
		public static void sk_quit()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.sk_quit();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sk_step, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041EA8] System_Action__System_Private_CoreLib__System__Action__System_Private_CoreLib, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_step")]
		public static bool sk_step(global::System.Action__System_Private_CoreLib app_update)
		{
			// Setup
			void* unsafe_app_update = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_app_update = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Action,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
									app_update
								);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sk_step(unsafe_app_update);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(app_update);
			}
		}

		// Signature, sk_active_runtime, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_Runtime__StereoKit__Runtime__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_active_runtime")]
		public static global::StereoKit.Runtime__StereoKit sk_active_runtime()
		{
			// Setup
			global::StereoKit.Runtime__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sk_active_runtime();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_set_settings, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000421C0] StereoKit_Settings__StereoKit__StereoKit__Settings__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_set_settings")]
		public static void sk_set_settings(global::StereoKit.Settings__StereoKit settings)
		{
			// Setup
			global::StereoKit.Settings__StereoKit__Impl.UnsafeType unsafe_settings = default(global::StereoKit.Settings__StereoKit__Impl.UnsafeType);
			// Marshalling
			global::StereoKit.Settings__StereoKit__Impl.Marshal__SafeToUnsafe(
								ref settings, 
								out unsafe_settings
							);
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.sk_set_settings(unsafe_settings);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sk_system_info, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_SystemInfo__StereoKit__StereoKit__SystemInfo__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_system_info")]
		public static global::StereoKit.SystemInfo__StereoKit sk_system_info()
		{
			// Setup
			global::StereoKit.SystemInfo__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sk_system_info();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_version_name, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_version_name")]
		public static global::System.IntPtr sk_version_name()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sk_version_name();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sk_version_id, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sk_version_id")]
		public static ulong sk_version_id()
		{
			// Setup
			ulong unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sk_version_id();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_getf_unscaled, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_getf_unscaled")]
		public static float time_getf_unscaled()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_getf_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_get_unscaled, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_get_unscaled")]
		public static double time_get_unscaled()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_get_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_getf, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_getf")]
		public static float time_getf()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_getf();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_get, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_get")]
		public static double time_get()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_get();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsedf_unscaled, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsedf_unscaled")]
		public static float time_elapsedf_unscaled()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_elapsedf_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsed_unscaled, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsed_unscaled")]
		public static double time_elapsed_unscaled()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_elapsed_unscaled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsedf, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsedf")]
		public static float time_elapsedf()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_elapsedf();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_elapsed, [fwd] [return] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_elapsed")]
		public static double time_elapsed()
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.time_elapsed();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, time_scale, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_scale")]
		public static void time_scale(double scale)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.time_scale(scale);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, time_set_time, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [optional] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "time_set_time")]
		public static void time_set_time(
					double total_seconds, 
					double frame_elapsed_seconds)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.time_set_time(
								total_seconds, 
								frame_elapsed_seconds
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, quat_difference, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_difference")]
		public static global::StereoKit.Quat__StereoKit quat_difference(
					ref global::StereoKit.Quat__StereoKit a, 
					ref global::StereoKit.Quat__StereoKit b)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Quat__StereoKit* pinned_b = &(b))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_difference(
										pinned_a, 
										pinned_b
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, quat_lookat, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_lookat")]
		public static global::StereoKit.Quat__StereoKit quat_lookat(
					ref global::StereoKit.Vec3__StereoKit from, 
					ref global::StereoKit.Vec3__StereoKit at)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_from = &(from))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_at = &(at))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_lookat(
										pinned_from, 
										pinned_at
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, quat_lookat_up, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_lookat_up")]
		public static global::StereoKit.Quat__StereoKit quat_lookat_up(
					ref global::StereoKit.Vec3__StereoKit from, 
					ref global::StereoKit.Vec3__StereoKit at, 
					ref global::StereoKit.Vec3__StereoKit up)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_from = &(from))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_at = &(at))
					fixed (global::StereoKit.Vec3__StereoKit* pinned_up = &(up))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_lookat_up(
											pinned_from, 
											pinned_at, 
											pinned_up
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
			return unsafe___value;
		}

		// Signature, quat_from_angles, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_from_angles")]
		public static global::StereoKit.Quat__StereoKit quat_from_angles(
					float pitch_x_deg, 
					float yaw_y_deg, 
					float roll_z_deg)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_from_angles(
								pitch_x_deg, 
								yaw_y_deg, 
								roll_z_deg
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, quat_slerp, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_slerp")]
		public static global::StereoKit.Quat__StereoKit quat_slerp(
					ref global::StereoKit.Quat__StereoKit a, 
					ref global::StereoKit.Quat__StereoKit b, 
					float t)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Quat__StereoKit* pinned_b = &(b))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_slerp(
										pinned_a, 
										pinned_b, 
										t
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, quat_normalize, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_normalize")]
		public static global::StereoKit.Quat__StereoKit quat_normalize(ref global::StereoKit.Quat__StereoKit a)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_a = &(a))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_normalize(pinned_a);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, quat_inverse, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_inverse")]
		public static global::StereoKit.Quat__StereoKit quat_inverse(ref global::StereoKit.Quat__StereoKit a)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_a = &(a))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_inverse(pinned_a);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, quat_mul, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_mul")]
		public static global::StereoKit.Quat__StereoKit quat_mul(
					ref global::StereoKit.Quat__StereoKit a, 
					ref global::StereoKit.Quat__StereoKit b)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Quat__StereoKit* pinned_b = &(b))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_mul(
										pinned_a, 
										pinned_b
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, quat_mul_vec, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "quat_mul_vec")]
		public static global::StereoKit.Vec3__StereoKit quat_mul_vec(
					ref global::StereoKit.Quat__StereoKit a, 
					ref global::StereoKit.Vec3__StereoKit b)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_b = &(b))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.quat_mul_vec(
										pinned_a, 
										pinned_b
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_inverse, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_inverse")]
		public static void matrix_inverse(
					ref global::StereoKit.Matrix__StereoKit a, 
					out global::StereoKit.Matrix__StereoKit out_matrix)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Matrix__StereoKit* pinned_out_matrix = &(out_matrix))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.matrix_inverse(
										pinned_a, 
										pinned_out_matrix
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, matrix_mul, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_mul")]
		public static void matrix_mul(
					ref global::StereoKit.Matrix__StereoKit a, 
					ref global::StereoKit.Matrix__StereoKit b, 
					out global::StereoKit.Matrix__StereoKit out_matrix)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Matrix__StereoKit* pinned_b = &(b))
					fixed (global::StereoKit.Matrix__StereoKit* pinned_out_matrix = &(out_matrix))
					{
						// Call to native method
						global::__Interop.StereoKitC_dll_PInvokes.matrix_mul(
											pinned_a, 
											pinned_b, 
											pinned_out_matrix
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
		}

		// Signature, matrix_mul_point, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_mul_point")]
		public static global::StereoKit.Vec3__StereoKit matrix_mul_point(
					ref global::StereoKit.Matrix__StereoKit transform, 
					ref global::StereoKit.Vec3__StereoKit point)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_point = &(point))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.matrix_mul_point(
										pinned_transform, 
										pinned_point
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_mul_direction, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_mul_direction")]
		public static global::StereoKit.Vec3__StereoKit matrix_mul_direction(
					ref global::StereoKit.Matrix__StereoKit transform, 
					ref global::StereoKit.Vec3__StereoKit direction)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_direction = &(direction))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.matrix_mul_direction(
										pinned_transform, 
										pinned_direction
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_trs, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_trs")]
		public static global::StereoKit.Matrix__StereoKit matrix_trs(
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit orientation, 
					ref global::StereoKit.Vec3__StereoKit scale)
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_orientation = &(orientation))
					fixed (global::StereoKit.Vec3__StereoKit* pinned_scale = &(scale))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.matrix_trs(
											pinned_position, 
											pinned_orientation, 
											pinned_scale
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
			return unsafe___value;
		}

		// Signature, matrix_trs_out, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "matrix_trs_out")]
		public static void matrix_trs_out(
					out global::StereoKit.Matrix__StereoKit out_result, 
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit orientation, 
					ref global::StereoKit.Vec3__StereoKit scale)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_out_result = &(out_result))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
					fixed (global::StereoKit.Quat__StereoKit* pinned_orientation = &(orientation))
						fixed (global::StereoKit.Vec3__StereoKit* pinned_scale = &(scale))
						{
							// Call to native method
							global::__Interop.StereoKitC_dll_PInvokes.matrix_trs_out(
												pinned_out_result, 
												pinned_position, 
												pinned_orientation, 
												pinned_scale
											);
							global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
						}
			// Return
		}

		// Signature, pose_matrix, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "pose_matrix")]
		public static global::StereoKit.Matrix__StereoKit pose_matrix(
					ref global::StereoKit.Pose__StereoKit pose, 
					global::StereoKit.Vec3__StereoKit scale)
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Pose__StereoKit* pinned_pose = &(pose))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.pose_matrix(
									pinned_pose, 
									scale
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, vec3_cross, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "vec3_cross")]
		public static global::StereoKit.Vec3__StereoKit vec3_cross(
					ref global::StereoKit.Vec3__StereoKit a, 
					ref global::StereoKit.Vec3__StereoKit b)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_a = &(a))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_b = &(b))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.vec3_cross(
										pinned_a, 
										pinned_b
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, plane_ray_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Plane__StereoKit__StereoKit__Plane__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "plane_ray_intersect")]
		public static bool plane_ray_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Ray__StereoKit ray, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.plane_ray_intersect(
									plane, 
									ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, plane_line_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Plane__StereoKit__StereoKit__Plane__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "plane_line_intersect")]
		public static bool plane_line_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit p1, 
					global::StereoKit.Vec3__StereoKit p2, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.plane_line_intersect(
									plane, 
									p1, 
									p2, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, plane_point_closest, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Plane__StereoKit__StereoKit__Plane__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "plane_point_closest")]
		public static global::StereoKit.Vec3__StereoKit plane_point_closest(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit pt)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.plane_point_closest(
								plane, 
								pt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sphere_ray_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Sphere__StereoKit__StereoKit__Sphere__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sphere_ray_intersect")]
		public static bool sphere_ray_intersect(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Ray__StereoKit ray, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sphere_ray_intersect(
									sphere, 
									ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, sphere_point_contains, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Sphere__StereoKit__StereoKit__Sphere__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sphere_point_contains")]
		public static bool sphere_point_contains(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Vec3__StereoKit pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sphere_point_contains(
								sphere, 
								pt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, bounds_ray_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "bounds_ray_intersect")]
		public static bool bounds_ray_intersect(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Ray__StereoKit ray, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.bounds_ray_intersect(
									bounds, 
									ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, bounds_point_contains, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "bounds_point_contains")]
		public static bool bounds_point_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.bounds_point_contains(
								bounds, 
								pt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, bounds_line_contains, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "bounds_line_contains")]
		public static bool bounds_line_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit linePt1, 
					global::StereoKit.Vec3__StereoKit linePt2)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.bounds_line_contains(
								bounds, 
								linePt1, 
								linePt2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, color_hsv, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_hsv")]
		public static global::StereoKit.Color__StereoKit color_hsv(
					float hue, 
					float saturation, 
					float value, 
					float transparency)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.color_hsv(
								hue, 
								saturation, 
								value, 
								transparency
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, color_to_hsv, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_to_hsv")]
		public static global::StereoKit.Vec3__StereoKit color_to_hsv(ref global::StereoKit.Color__StereoKit color)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Color__StereoKit* pinned_color = &(color))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.color_to_hsv(pinned_color);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, color_lab, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_lab")]
		public static global::StereoKit.Color__StereoKit color_lab(
					float l, 
					float a, 
					float b, 
					float transparency)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.color_lab(
								l, 
								a, 
								b, 
								transparency
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, color_to_lab, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "color_to_lab")]
		public static global::StereoKit.Vec3__StereoKit color_to_lab(ref global::StereoKit.Color__StereoKit color)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Color__StereoKit* pinned_color = &(color))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.color_to_lab(pinned_color);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, gradient_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_create")]
		public static global::System.IntPtr gradient_create()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.gradient_create();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_create_keys, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_GradientKey__StereoKit__StereoKit__GradientKey__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_create_keys")]
		public static global::System.IntPtr gradient_create_keys(
					global::StereoKit.GradientKey__StereoKit[] keys, 
					int count)
		{
			// Setup
			global::StereoKit.GradientKey__StereoKit* unsafe_keys = default(global::StereoKit.GradientKey__StereoKit*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (keys == null)
					unsafe_keys = null;
				else
				{
					if (keys != null)
						unsafe_keys = (global::StereoKit.GradientKey__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(keys.Length * sizeof(global::StereoKit.GradientKey__StereoKit))));
					if (keys != null)
						for (uint mcgIdx = 0; (mcgIdx < keys.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_GradientKey__StereoKit__StereoKit__GradientKey__StereoKit keys
							unsafe_keys[mcgIdx] = keys[mcgIdx];
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.gradient_create_keys(
									unsafe_keys, 
									count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_keys);
			}
		}

		// Signature, gradient_add, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_add")]
		public static void gradient_add(
					global::System.IntPtr gradient, 
					global::StereoKit.Color__StereoKit color, 
					float position)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.gradient_add(
								gradient, 
								color, 
								position
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, gradient_set, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_set")]
		public static void gradient_set(
					global::System.IntPtr gradient, 
					int index, 
					global::StereoKit.Color__StereoKit color, 
					float position)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.gradient_set(
								gradient, 
								index, 
								color, 
								position
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, gradient_remove, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_remove")]
		public static void gradient_remove(
					global::System.IntPtr gradient, 
					int index)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.gradient_remove(
								gradient, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, gradient_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_count")]
		public static int gradient_count(global::System.IntPtr gradient)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.gradient_count(gradient);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_get, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_get")]
		public static global::StereoKit.Color__StereoKit gradient_get(
					global::System.IntPtr gradient, 
					float at)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.gradient_get(
								gradient, 
								at
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_get32, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_get32")]
		public static global::StereoKit.Color32__StereoKit gradient_get32(
					global::System.IntPtr gradient, 
					float at)
		{
			// Setup
			global::StereoKit.Color32__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.gradient_get32(
								gradient, 
								at
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, gradient_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "gradient_release")]
		public static void gradient_release(global::System.IntPtr gradient)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.gradient_release(gradient);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sh_create, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_SHLight__StereoKit__StereoKit__SHLight__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sh_create")]
		public static global::StereoKit.SphericalHarmonics__StereoKit sh_create(
					global::StereoKit.SHLight__StereoKit[] lights, 
					int light_count)
		{
			// Setup
			global::StereoKit.SHLight__StereoKit* unsafe_lights = default(global::StereoKit.SHLight__StereoKit*);
			global::StereoKit.SphericalHarmonics__StereoKit unsafe___value;
			try
			{
				// Marshalling
				if (lights == null)
					unsafe_lights = null;
				else
				{
					if (lights != null)
						unsafe_lights = (global::StereoKit.SHLight__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(lights.Length * sizeof(global::StereoKit.SHLight__StereoKit))));
					if (lights != null)
						for (uint mcgIdx = 0; (mcgIdx < lights.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_SHLight__StereoKit__StereoKit__SHLight__StereoKit lights
							unsafe_lights[mcgIdx] = lights[mcgIdx];
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sh_create(
									unsafe_lights, 
									light_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_lights);
			}
		}

		// Signature, sh_lookup, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sh_lookup")]
		public static global::StereoKit.Color__StereoKit sh_lookup(
					ref global::StereoKit.SphericalHarmonics__StereoKit lookup, 
					global::StereoKit.Vec3__StereoKit normal)
		{
			// Setup
			global::StereoKit.Color__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lookup = &(lookup))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sh_lookup(
									pinned_lookup, 
									normal
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, mesh_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_find")]
		public static global::System.IntPtr mesh_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, mesh_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_create")]
		public static global::System.IntPtr mesh_create()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_create();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_id")]
		public static void mesh_set_id(
					global::System.IntPtr mesh, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.mesh_set_id(
									mesh, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, mesh_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_release")]
		public static void mesh_release(global::System.IntPtr mesh)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.mesh_release(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mesh_set_keep_data, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_keep_data")]
		public static void mesh_set_keep_data(
					global::System.IntPtr mesh, 
					bool keep_data)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.mesh_set_keep_data(
								mesh, 
								(keep_data ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mesh_get_keep_data, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_keep_data")]
		public static bool mesh_get_keep_data(global::System.IntPtr mesh)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_get_keep_data(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, mesh_set_verts, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_verts")]
		public static void mesh_set_verts(
					global::System.IntPtr mesh, 
					global::StereoKit.Vertex__StereoKit[] vertices, 
					int vertex_count, 
					bool calculate_bounds)
		{
			// Setup
			global::StereoKit.Vertex__StereoKit* unsafe_vertices = default(global::StereoKit.Vertex__StereoKit*);
			try
			{
				// Marshalling
				if (vertices == null)
					unsafe_vertices = null;
				else
				{
					if (vertices != null)
						unsafe_vertices = (global::StereoKit.Vertex__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(vertices.Length * sizeof(global::StereoKit.Vertex__StereoKit))));
					if (vertices != null)
						for (uint mcgIdx = 0; (mcgIdx < vertices.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Vertex__StereoKit__StereoKit__Vertex__StereoKit vertices
							unsafe_vertices[mcgIdx] = vertices[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.mesh_set_verts(
									mesh, 
									unsafe_vertices, 
									vertex_count, 
									(calculate_bounds ? 1 : 0)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_vertices);
			}
		}

		// Signature, mesh_get_verts, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_verts")]
		public static void mesh_get_verts(
					global::System.IntPtr mesh, 
					out global::System.IntPtr out_vertices, 
					out int out_vertex_count)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_out_vertices = &(out_vertices))
				fixed (int* pinned_out_vertex_count = &(out_vertex_count))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.mesh_get_verts(
										mesh, 
										pinned_out_vertices, 
										pinned_out_vertex_count
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, mesh_set_inds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_uint__unsigned int *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_inds")]
		public static void mesh_set_inds(
					global::System.IntPtr mesh, 
					uint[] indices, 
					int index_count)
		{
			// Setup
			uint* unsafe_indices;
			// Marshalling
			fixed (uint* pinned_indices = ((indices != null 
						&& indices.Length == 0) ? new uint[1] : indices))
			{
				unsafe_indices = (uint*)pinned_indices;
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.mesh_set_inds(
									mesh, 
									unsafe_indices, 
									index_count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, mesh_get_inds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_inds")]
		public static void mesh_get_inds(
					global::System.IntPtr mesh, 
					out global::System.IntPtr out_indices, 
					out int out_index_count)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_out_indices = &(out_indices))
				fixed (int* pinned_out_index_count = &(out_index_count))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.mesh_get_inds(
										mesh, 
										pinned_out_indices, 
										pinned_out_index_count
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, mesh_set_draw_inds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_draw_inds")]
		public static void mesh_set_draw_inds(
					global::System.IntPtr mesh, 
					int index_count)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.mesh_set_draw_inds(
								mesh, 
								index_count
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, mesh_set_bounds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_set_bounds")]
		public static void mesh_set_bounds(
					global::System.IntPtr mesh, 
					ref global::StereoKit.Bounds__StereoKit bounds)
		{
			// Marshalling
			fixed (global::StereoKit.Bounds__StereoKit* pinned_bounds = &(bounds))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.mesh_set_bounds(
									mesh, 
									pinned_bounds
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, mesh_get_bounds, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_get_bounds")]
		public static global::StereoKit.Bounds__StereoKit mesh_get_bounds(global::System.IntPtr mesh)
		{
			// Setup
			global::StereoKit.Bounds__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_get_bounds(mesh);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_ray_intersect, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Ray__StereoKit__StereoKit__Ray__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_ray_intersect")]
		public static bool mesh_ray_intersect(
					global::System.IntPtr mesh, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					out global::StereoKit.Vec3__StereoKit out_pt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_out_pt = &(out_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_ray_intersect(
									mesh, 
									model_space_ray, 
									pinned_out_pt
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, mesh_gen_plane, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_plane")]
		public static global::System.IntPtr mesh_gen_plane(
					global::StereoKit.Vec2__StereoKit dimensions, 
					global::StereoKit.Vec3__StereoKit plane_normal, 
					global::StereoKit.Vec3__StereoKit plane_top_direction, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_gen_plane(
								dimensions, 
								plane_normal, 
								plane_top_direction, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_cube, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_cube")]
		public static global::System.IntPtr mesh_gen_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_gen_cube(
								dimensions, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_sphere, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_sphere")]
		public static global::System.IntPtr mesh_gen_sphere(
					float diameter, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_gen_sphere(
								diameter, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_rounded_cube, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_rounded_cube")]
		public static global::System.IntPtr mesh_gen_rounded_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					float edge_radius, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_gen_rounded_cube(
								dimensions, 
								edge_radius, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, mesh_gen_cylinder, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "mesh_gen_cylinder")]
		public static global::System.IntPtr mesh_gen_cylinder(
					float diameter, 
					float depth, 
					global::StereoKit.Vec3__StereoKit direction, 
					int subdivisions)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.mesh_gen_cylinder(
								diameter, 
								depth, 
								direction, 
								subdivisions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_find")]
		public static global::System.IntPtr tex_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, tex_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexType__StereoKit__TexType__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexFormat__StereoKit__TexFormat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create")]
		public static global::System.IntPtr tex_create(
					global::StereoKit.TexType__StereoKit type, 
					global::StereoKit.TexFormat__StereoKit format)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_create(
								type, 
								format
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_create_mem, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_mem")]
		public static global::System.IntPtr tex_create_mem(
					byte[] data, 
					int data_size, 
					bool srgb_data)
		{
			// Setup
			byte* unsafe_data;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_data = ((data != null 
						&& data.Length == 0) ? new byte[1] : data))
			{
				unsafe_data = (byte*)pinned_data;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_create_mem(
									unsafe_data, 
									data_size, 
									(srgb_data ? 1 : 0)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_file")]
		public static global::System.IntPtr tex_create_file(
					string file, 
					bool srgb_data)
		{
			// Setup
			byte* unsafe_file = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_file = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(file, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_create_file(
									unsafe_file, 
									(srgb_data ? 1 : 0)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_file);
			}
		}

		// Signature, tex_create_cubemap_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_file")]
		public static global::System.IntPtr tex_create_cubemap_file(
					string equirectangular_file, 
					bool srgb_data, 
					global::System.IntPtr lighting_info)
		{
			// Setup
			byte* unsafe_equirectangular_file = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_equirectangular_file = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(equirectangular_file, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_create_cubemap_file(
									unsafe_equirectangular_file, 
									(srgb_data ? 1 : 0), 
									lighting_info
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_equirectangular_file);
			}
		}

		// Signature, tex_create_cubemap_file__0, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_file")]
		public static global::System.IntPtr tex_create_cubemap_file__0(
					string equirectangular_file, 
					bool srgb_data, 
					out global::StereoKit.SphericalHarmonics__StereoKit lighting_info)
		{
			// Setup
			byte* unsafe_equirectangular_file = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_equirectangular_file = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(equirectangular_file, true, false);
				fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_create_cubemap_file__0(
										unsafe_equirectangular_file, 
										(srgb_data ? 1 : 0), 
										pinned_lighting_info
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_equirectangular_file);
			}
		}

		// Signature, tex_create_cubemap_files, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_string__unsigned char * *, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_files")]
		public static global::System.IntPtr tex_create_cubemap_files(
					string[] cube_face_file_xxyyzz, 
					bool srgb_data, 
					global::System.IntPtr lighting_info)
		{
			// Setup
			byte** unsafe_cube_face_file_xxyyzz = default(byte**);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (cube_face_file_xxyyzz == null)
					unsafe_cube_face_file_xxyyzz = null;
				else
				{
					if (cube_face_file_xxyyzz != null)
						unsafe_cube_face_file_xxyyzz = (byte**)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(cube_face_file_xxyyzz.Length * sizeof(byte*))));
					if (cube_face_file_xxyyzz != null)
						for (uint mcgIdx = 0; (mcgIdx < cube_face_file_xxyyzz.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
							unsafe_cube_face_file_xxyyzz[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(cube_face_file_xxyyzz[mcgIdx], true, false);
						}
				}
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_create_cubemap_files(
									unsafe_cube_face_file_xxyyzz, 
									(srgb_data ? 1 : 0), 
									lighting_info
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				if (unsafe_cube_face_file_xxyyzz != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < cube_face_file_xxyyzz.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
						global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz);
			}
		}

		// Signature, tex_create_cubemap_files__0, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000424E8] rg_string__unsigned char * *, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_create_cubemap_files")]
		public static global::System.IntPtr tex_create_cubemap_files__0(
					string[] cube_face_file_xxyyzz, 
					bool srgb_data, 
					out global::StereoKit.SphericalHarmonics__StereoKit lighting_info)
		{
			// Setup
			byte** unsafe_cube_face_file_xxyyzz = default(byte**);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				if (cube_face_file_xxyyzz == null)
					unsafe_cube_face_file_xxyyzz = null;
				else
				{
					if (cube_face_file_xxyyzz != null)
						unsafe_cube_face_file_xxyyzz = (byte**)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(cube_face_file_xxyyzz.Length * sizeof(byte*))));
					if (cube_face_file_xxyyzz != null)
						for (uint mcgIdx = 0; (mcgIdx < cube_face_file_xxyyzz.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
							unsafe_cube_face_file_xxyyzz[mcgIdx] = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(cube_face_file_xxyyzz[mcgIdx], true, false);
						}
				}
				fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_create_cubemap_files__0(
										unsafe_cube_face_file_xxyyzz, 
										(srgb_data ? 1 : 0), 
										pinned_lighting_info
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				if (unsafe_cube_face_file_xxyyzz != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < cube_face_file_xxyyzz.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [EETypeRva:0x00041C30] string__unsigned char * cube_face_file_xxyyzz
						global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_cube_face_file_xxyyzz);
			}
		}

		// Signature, tex_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_id")]
		public static void tex_set_id(
					global::System.IntPtr texture, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.tex_set_id(
									texture, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, tex_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_release")]
		public static void tex_release(global::System.IntPtr texture)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.tex_release(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_set_colors, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::System.IntPtr data)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.tex_set_colors(
								texture, 
								width, 
								height, 
								data
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_set_colors__0, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__0(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color32__StereoKit[] data)
		{
			// Setup
			global::StereoKit.Color32__StereoKit* unsafe_data = default(global::StereoKit.Color32__StereoKit*);
			try
			{
				// Marshalling
				if (data == null)
					unsafe_data = null;
				else
				{
					if (data != null)
						unsafe_data = (global::StereoKit.Color32__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(data.Length * sizeof(global::StereoKit.Color32__StereoKit))));
					if (data != null)
						for (uint mcgIdx = 0; (mcgIdx < data.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit data
							unsafe_data[mcgIdx] = data[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.tex_set_colors__0(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_data);
			}
		}

		// Signature, tex_set_colors__1, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_Color__StereoKit__StereoKit__Color__StereoKit *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__1(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color__StereoKit[] data)
		{
			// Setup
			global::StereoKit.Color__StereoKit* unsafe_data = default(global::StereoKit.Color__StereoKit*);
			try
			{
				// Marshalling
				if (data == null)
					unsafe_data = null;
				else
				{
					if (data != null)
						unsafe_data = (global::StereoKit.Color__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(data.Length * sizeof(global::StereoKit.Color__StereoKit))));
					if (data != null)
						for (uint mcgIdx = 0; (mcgIdx < data.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit data
							unsafe_data[mcgIdx] = data[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.tex_set_colors__1(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_data);
			}
		}

		// Signature, tex_set_colors__2, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__2(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					byte[] data)
		{
			// Setup
			byte* unsafe_data;
			// Marshalling
			fixed (byte* pinned_data = ((data != null 
						&& data.Length == 0) ? new byte[1] : data))
			{
				unsafe_data = (byte*)pinned_data;
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.tex_set_colors__2(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, tex_set_colors__3, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_ushort__unsigned short *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__3(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					ushort[] data)
		{
			// Setup
			ushort* unsafe_data;
			// Marshalling
			fixed (ushort* pinned_data = ((data != null 
						&& data.Length == 0) ? new ushort[1] : data))
			{
				unsafe_data = (ushort*)pinned_data;
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.tex_set_colors__3(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, tex_set_colors__4, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_float__float *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_colors")]
		public static void tex_set_colors__4(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					float[] data)
		{
			// Setup
			float* unsafe_data;
			// Marshalling
			fixed (float* pinned_data = ((data != null 
						&& data.Length == 0) ? new float[1] : data))
			{
				unsafe_data = (float*)pinned_data;
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.tex_set_colors__4(
									texture, 
									width, 
									height, 
									unsafe_data
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, tex_add_zbuffer, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexFormat__StereoKit__TexFormat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_add_zbuffer")]
		public static global::System.IntPtr tex_add_zbuffer(
					global::System.IntPtr texture, 
					global::StereoKit.TexFormat__StereoKit format)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_add_zbuffer(
								texture, 
								format
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_rtarget_clear, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_rtarget_clear")]
		public static void tex_rtarget_clear(
					global::System.IntPtr render_target, 
					global::StereoKit.Color32__StereoKit color)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.tex_rtarget_clear(
								render_target, 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_rtarget_set_active, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_rtarget_set_active")]
		public static void tex_rtarget_set_active(global::System.IntPtr render_target)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.tex_rtarget_set_active(render_target);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_gen_cubemap, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_gen_cubemap")]
		public static global::System.IntPtr tex_gen_cubemap(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					global::System.IntPtr lighting_info)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_gen_cubemap(
								gradient, 
								gradient_dir, 
								resolution, 
								lighting_info
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_gen_cubemap__0, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_gen_cubemap")]
		public static global::System.IntPtr tex_gen_cubemap__0(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					out global::StereoKit.SphericalHarmonics__StereoKit lighting_info)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_gen_cubemap__0(
									gradient, 
									gradient_dir, 
									resolution, 
									pinned_lighting_info
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_gen_cubemap_sh, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_gen_cubemap_sh")]
		public static global::System.IntPtr tex_gen_cubemap_sh(
					ref global::StereoKit.SphericalHarmonics__StereoKit lighting, 
					int resolution)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting = &(lighting))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_gen_cubemap_sh(
									pinned_lighting, 
									resolution
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, tex_get_format, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_TexFormat__StereoKit__TexFormat__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_format")]
		public static global::StereoKit.TexFormat__StereoKit tex_get_format(global::System.IntPtr texture)
		{
			// Setup
			global::StereoKit.TexFormat__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_get_format(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_get_width, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_width")]
		public static int tex_get_width(global::System.IntPtr texture)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_get_width(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_get_height, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_height")]
		public static int tex_get_height(global::System.IntPtr texture)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_get_height(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_set_sample, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexSample__StereoKit__TexSample__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_sample")]
		public static void tex_set_sample(
					global::System.IntPtr texture, 
					global::StereoKit.TexSample__StereoKit sample)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.tex_set_sample(
								texture, 
								sample
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_get_sample, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_TexSample__StereoKit__TexSample__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_sample")]
		public static global::StereoKit.TexSample__StereoKit tex_get_sample(global::System.IntPtr texture)
		{
			// Setup
			global::StereoKit.TexSample__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_get_sample(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_set_address, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TexAddress__StereoKit__TexAddress__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_address")]
		public static void tex_set_address(
					global::System.IntPtr texture, 
					global::StereoKit.TexAddress__StereoKit address_mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.tex_set_address(
								texture, 
								address_mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_get_address, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_TexAddress__StereoKit__TexAddress__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_address")]
		public static global::StereoKit.TexAddress__StereoKit tex_get_address(global::System.IntPtr texture)
		{
			// Setup
			global::StereoKit.TexAddress__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_get_address(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, tex_set_anisotropy, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_set_anisotropy")]
		public static void tex_set_anisotropy(
					global::System.IntPtr texture, 
					int anisotropy_level)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.tex_set_anisotropy(
								texture, 
								anisotropy_level
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, tex_get_anisotropy, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "tex_get_anisotropy")]
		public static int tex_get_anisotropy(global::System.IntPtr texture)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.tex_get_anisotropy(texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, font_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_find")]
		public static global::System.IntPtr font_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.font_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, font_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_create")]
		public static global::System.IntPtr font_create(string file)
		{
			// Setup
			byte* unsafe_file = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_file = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(file, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.font_create(unsafe_file);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_file);
			}
		}

		// Signature, font_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_release")]
		public static void font_release(global::System.IntPtr font)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.font_release(font);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, font_get_tex, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "font_get_tex")]
		public static global::System.IntPtr font_get_tex(global::System.IntPtr font)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.font_get_tex(font);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, shader_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_find")]
		public static global::System.IntPtr shader_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, shader_compile, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_compile")]
		public static bool shader_compile(
					string hlsl, 
					string opt_filename, 
					out global::System.IntPtr out_data, 
					out ulong out_size)
		{
			// Setup
			byte* unsafe_hlsl = default(byte*);
			byte* unsafe_opt_filename = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_hlsl = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(hlsl, true, false);
				unsafe_opt_filename = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(opt_filename, true, false);
				fixed (global::System.IntPtr* pinned_out_data = &(out_data))
					fixed (ulong* pinned_out_size = &(out_size))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_compile(
											unsafe_hlsl, 
											unsafe_opt_filename, 
											pinned_out_data, 
											pinned_out_size
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_hlsl);
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_opt_filename);
			}
		}

		// Signature, shader_compile__0, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_compile")]
		public static bool shader_compile__0(
					string hlsl, 
					global::System.IntPtr opt_filename, 
					out global::System.IntPtr out_data, 
					out ulong out_size)
		{
			// Setup
			byte* unsafe_hlsl = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_hlsl = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(hlsl, true, false);
				fixed (global::System.IntPtr* pinned_out_data = &(out_data))
					fixed (ulong* pinned_out_size = &(out_size))
					{
						// Call to native method
						unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_compile__0(
											unsafe_hlsl, 
											opt_filename, 
											pinned_out_data, 
											pinned_out_size
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_hlsl);
			}
		}

		// Signature, shader_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_create_file")]
		public static global::System.IntPtr shader_create_file(string filename)
		{
			// Setup
			byte* unsafe_filename = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_filename = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(filename, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_create_file(unsafe_filename);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_filename);
			}
		}

		// Signature, shader_create_hlsl, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_create_hlsl")]
		public static global::System.IntPtr shader_create_hlsl(string hlsl)
		{
			// Setup
			byte* unsafe_hlsl = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_hlsl = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(hlsl, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_create_hlsl(unsafe_hlsl);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_hlsl);
			}
		}

		// Signature, shader_create_mem, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_create_mem")]
		public static global::System.IntPtr shader_create_mem(
					byte[] data, 
					ulong data_size)
		{
			// Setup
			byte* unsafe_data;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_data = ((data != null 
						&& data.Length == 0) ? new byte[1] : data))
			{
				unsafe_data = (byte*)pinned_data;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_create_mem(
									unsafe_data, 
									data_size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, shader_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_set_id")]
		public static void shader_set_id(
					global::System.IntPtr shader, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.shader_set_id(
									shader, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, shader_get_name, [fwd] [return] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_get_name")]
		public static string shader_get_name(global::System.IntPtr shader)
		{
			// Setup
			byte* unsafe___value = default(byte*);
			string __value = default(string);
			// Marshalling
			// Call to native method
			unsafe___value = (byte*)global::__Interop.StereoKitC_dll_PInvokes.shader_get_name(shader);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			__value = global::System.Runtime.InteropServices.McgMarshal.AnsiStringToString(unsafe___value);
			global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe___value);
			// Return
			return __value;
		}

		// Signature, shader_set_code, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_set_code")]
		public static int shader_set_code(
					global::System.IntPtr shader, 
					byte[] data, 
					int data_size)
		{
			// Setup
			byte* unsafe_data;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_data = ((data != null 
						&& data.Length == 0) ? new byte[1] : data))
			{
				unsafe_data = (byte*)pinned_data;
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_set_code(
									shader, 
									unsafe_data, 
									data_size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, shader_set_codefile, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_set_codefile")]
		public static int shader_set_codefile(
					global::System.IntPtr shader, 
					string filename)
		{
			// Setup
			byte* unsafe_filename = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_filename = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(filename, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.shader_set_codefile(
									shader, 
									unsafe_filename
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_filename);
			}
		}

		// Signature, shader_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "shader_release")]
		public static void shader_release(global::System.IntPtr shader)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.shader_release(shader);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_find")]
		public static global::System.IntPtr material_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, material_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_create")]
		public static global::System.IntPtr material_create(global::System.IntPtr shader)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_create(shader);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_copy, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_copy")]
		public static global::System.IntPtr material_copy(global::System.IntPtr material)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_copy(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_copy_id, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_copy_id")]
		public static global::System.IntPtr material_copy_id(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_copy_id(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, material_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_id")]
		public static void material_set_id(
					global::System.IntPtr material, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.material_set_id(
									material, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, material_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_release")]
		public static void material_release(global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.material_release(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_transparency, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Transparency__StereoKit__Transparency__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_transparency")]
		public static void material_set_transparency(
					global::System.IntPtr material, 
					global::StereoKit.Transparency__StereoKit mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.material_set_transparency(
								material, 
								mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_cull, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Cull__StereoKit__Cull__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_cull")]
		public static void material_set_cull(
					global::System.IntPtr material, 
					global::StereoKit.Cull__StereoKit mode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.material_set_cull(
								material, 
								mode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_wireframe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_wireframe")]
		public static void material_set_wireframe(
					global::System.IntPtr material, 
					bool wireframe)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.material_set_wireframe(
								material, 
								(wireframe ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_queue_offset, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_queue_offset")]
		public static void material_set_queue_offset(
					global::System.IntPtr material, 
					int offset)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.material_set_queue_offset(
								material, 
								offset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_set_float, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_float")]
		public static void material_set_float(
					global::System.IntPtr material, 
					string name, 
					float value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.material_set_float(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_color, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_color")]
		public static void material_set_color(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Color__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.material_set_color(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_vector, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec4__StereoKit__StereoKit__Vec4__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_vector")]
		public static void material_set_vector(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Vec4__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.material_set_vector(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_matrix, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_matrix")]
		public static void material_set_matrix(
					global::System.IntPtr material, 
					string name, 
					global::StereoKit.Matrix__StereoKit value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.material_set_matrix(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_texture, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_texture")]
		public static int material_set_texture(
					global::System.IntPtr material, 
					string name, 
					global::System.IntPtr value)
		{
			// Setup
			byte* unsafe_name = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_name = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(name, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_set_texture(
									material, 
									unsafe_name, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_name);
			}
		}

		// Signature, material_set_texture_id, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_texture_id")]
		public static int material_set_texture_id(
					global::System.IntPtr material, 
					ulong id, 
					global::System.IntPtr value)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_set_texture_id(
								material, 
								id, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_get_param_info, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_MaterialParam__StereoKit__MaterialParam__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_param_info")]
		public static void material_get_param_info(
					global::System.IntPtr material, 
					int index, 
					out string out_name, 
					out global::StereoKit.MaterialParam__StereoKit out_type)
		{
			// Setup
			byte* unsafe_out_name = default(byte*);
			try
			{
				// Marshalling
				unsafe_out_name = null;
				fixed (global::StereoKit.MaterialParam__StereoKit* pinned_out_type = &(out_type))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.material_get_param_info(
										material, 
										index, 
										&(unsafe_out_name), 
										pinned_out_type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				out_name = global::System.Runtime.InteropServices.McgMarshal.AnsiStringToString(unsafe_out_name);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_out_name);
			}
		}

		// Signature, material_get_param_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_param_count")]
		public static int material_get_param_count(global::System.IntPtr material)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_get_param_count(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, material_set_shader, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_set_shader")]
		public static void material_set_shader(
					global::System.IntPtr material, 
					global::System.IntPtr shader)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.material_set_shader(
								material, 
								shader
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, material_get_shader, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "material_get_shader")]
		public static global::System.IntPtr material_get_shader(global::System.IntPtr material)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.material_get_shader(material);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, text_make_style, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_TextStyle__StereoKit__StereoKit__TextStyle__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_make_style")]
		public static global::StereoKit.TextStyle__StereoKit text_make_style(
					global::System.IntPtr font, 
					float character_height, 
					global::System.IntPtr material, 
					global::StereoKit.Color32__StereoKit color)
		{
			// Setup
			global::StereoKit.TextStyle__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.text_make_style(
								font, 
								character_height, 
								material, 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, text_add_at, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_add_at")]
		public static void text_add_at(
					string text, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					int style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.text_add_at(
										unsafe_text, 
										pinned_transform, 
										style, 
										position, 
										align, 
										off_x, 
										off_y, 
										off_z
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, text_add_in, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_TextFit__StereoKit__TextFit__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_TextAlign__StereoKit__TextAlign__StereoKit, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_add_in")]
		public static void text_add_in(
					string text, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.TextFit__StereoKit fit, 
					int style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.text_add_in(
										unsafe_text, 
										pinned_transform, 
										size, 
										fit, 
										style, 
										position, 
										align, 
										off_x, 
										off_y, 
										off_z
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, text_size, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "text_size")]
		public static global::StereoKit.Vec2__StereoKit text_size(
					string text, 
					int style)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			global::StereoKit.Vec2__StereoKit unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.text_size(
									unsafe_text, 
									style
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, solid_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_SolidType__StereoKit__SolidType__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_create")]
		public static global::System.IntPtr solid_create(
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit rotation, 
					global::StereoKit.SolidType__StereoKit type)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_rotation = &(rotation))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.solid_create(
										pinned_position, 
										pinned_rotation, 
										type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, solid_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_release")]
		public static void solid_release(global::System.IntPtr solid)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.solid_release(solid);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, solid_add_sphere, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_add_sphere")]
		public static void solid_add_sphere(
					global::System.IntPtr solid, 
					float diameter, 
					float kilograms, 
					ref global::StereoKit.Vec3__StereoKit offset)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_offset = &(offset))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.solid_add_sphere(
									solid, 
									diameter, 
									kilograms, 
									pinned_offset
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_add_box, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_add_box")]
		public static void solid_add_box(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit dimensions, 
					float kilograms, 
					ref global::StereoKit.Vec3__StereoKit offset)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_dimensions = &(dimensions))
				fixed (global::StereoKit.Vec3__StereoKit* pinned_offset = &(offset))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.solid_add_box(
										solid, 
										pinned_dimensions, 
										kilograms, 
										pinned_offset
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, solid_add_capsule, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_add_capsule")]
		public static void solid_add_capsule(
					global::System.IntPtr solid, 
					float diameter, 
					float height, 
					float kilograms, 
					ref global::StereoKit.Vec3__StereoKit offset)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_offset = &(offset))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.solid_add_capsule(
									solid, 
									diameter, 
									height, 
									kilograms, 
									pinned_offset
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_set_type, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_SolidType__StereoKit__SolidType__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_type")]
		public static void solid_set_type(
					global::System.IntPtr solid, 
					global::StereoKit.SolidType__StereoKit type)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.solid_set_type(
								solid, 
								type
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, solid_set_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_enabled")]
		public static void solid_set_enabled(
					global::System.IntPtr solid, 
					int enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.solid_set_enabled(
								solid, 
								enabled
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, solid_move, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_move")]
		public static void solid_move(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit rotation)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_rotation = &(rotation))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.solid_move(
										solid, 
										pinned_position, 
										pinned_rotation
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, solid_teleport, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_teleport")]
		public static void solid_teleport(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit position, 
					ref global::StereoKit.Quat__StereoKit rotation)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_position = &(position))
				fixed (global::StereoKit.Quat__StereoKit* pinned_rotation = &(rotation))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.solid_teleport(
										solid, 
										pinned_position, 
										pinned_rotation
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
		}

		// Signature, solid_set_velocity, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_velocity")]
		public static void solid_set_velocity(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit meters_per_second)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_meters_per_second = &(meters_per_second))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.solid_set_velocity(
									solid, 
									pinned_meters_per_second
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_set_velocity_ang, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_set_velocity_ang")]
		public static void solid_set_velocity_ang(
					global::System.IntPtr solid, 
					ref global::StereoKit.Vec3__StereoKit radians_per_second)
		{
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_radians_per_second = &(radians_per_second))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.solid_set_velocity_ang(
									solid, 
									pinned_radians_per_second
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, solid_get_pose, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "solid_get_pose")]
		public static void solid_get_pose(
					global::System.IntPtr solid, 
					out global::StereoKit.Pose__StereoKit out_pose)
		{
			// Marshalling
			fixed (global::StereoKit.Pose__StereoKit* pinned_out_pose = &(out_pose))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.solid_get_pose(
									solid, 
									pinned_out_pose
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, model_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_find")]
		public static global::System.IntPtr model_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, model_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create")]
		public static global::System.IntPtr model_create()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_create();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_create_mesh, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create_mesh")]
		public static global::System.IntPtr model_create_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_create_mesh(
								mesh, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_create_mem, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create_mem")]
		public static global::System.IntPtr model_create_mem(
					string filename, 
					byte[] data, 
					int data_size, 
					global::System.IntPtr shader)
		{
			// Setup
			byte* unsafe_filename = default(byte*);
			byte* unsafe_data;
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_filename = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(filename, true, false);
				fixed (byte* pinned_data = ((data != null 
							&& data.Length == 0) ? new byte[1] : data))
				{
					unsafe_data = (byte*)pinned_data;
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_create_mem(
										unsafe_filename, 
										unsafe_data, 
										data_size, 
										shader
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_filename);
			}
		}

		// Signature, model_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_create_file")]
		public static global::System.IntPtr model_create_file(
					string filename, 
					global::System.IntPtr shader)
		{
			// Setup
			byte* unsafe_filename = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_filename = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(filename, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_create_file(
									unsafe_filename, 
									shader
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_filename);
			}
		}

		// Signature, model_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_id")]
		public static void model_set_id(
					global::System.IntPtr model, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.model_set_id(
									model, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, model_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_release")]
		public static void model_release(global::System.IntPtr model)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.model_release(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_get_material, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_material")]
		public static global::System.IntPtr model_get_material(
					global::System.IntPtr model, 
					int subset)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_get_material(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_get_mesh, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_mesh")]
		public static global::System.IntPtr model_get_mesh(
					global::System.IntPtr model, 
					int subset)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_get_mesh(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_get_transform, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_transform")]
		public static global::StereoKit.Matrix__StereoKit model_get_transform(
					global::System.IntPtr model, 
					int subset)
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_get_transform(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_set_material, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_material")]
		public static void model_set_material(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.model_set_material(
								model, 
								subset, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_mesh, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_mesh")]
		public static void model_set_mesh(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr mesh)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.model_set_mesh(
								model, 
								subset, 
								mesh
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_transform, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_transform")]
		public static void model_set_transform(
					global::System.IntPtr model, 
					int subset, 
					ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.model_set_transform(
									model, 
									subset, 
									pinned_transform
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, model_remove_subset, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_remove_subset")]
		public static void model_remove_subset(
					global::System.IntPtr model, 
					int subset)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.model_remove_subset(
								model, 
								subset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_add_subset, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_add_subset")]
		public static int model_add_subset(
					global::System.IntPtr model, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_add_subset(
									model, 
									mesh, 
									material, 
									pinned_transform
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, model_subset_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_subset_count")]
		public static int model_subset_count(global::System.IntPtr model)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_subset_count(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, model_recalculate_bounds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_recalculate_bounds")]
		public static void model_recalculate_bounds(global::System.IntPtr model)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.model_recalculate_bounds(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, model_set_bounds, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_set_bounds")]
		public static void model_set_bounds(
					global::System.IntPtr model, 
					ref global::StereoKit.Bounds__StereoKit bounds)
		{
			// Marshalling
			fixed (global::StereoKit.Bounds__StereoKit* pinned_bounds = &(bounds))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.model_set_bounds(
									model, 
									pinned_bounds
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, model_get_bounds, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "model_get_bounds")]
		public static global::StereoKit.Bounds__StereoKit model_get_bounds(global::System.IntPtr model)
		{
			// Setup
			global::StereoKit.Bounds__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.model_get_bounds(model);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sprite_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_SpriteType__StereoKit__SpriteType__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_create")]
		public static global::System.IntPtr sprite_create(
					global::System.IntPtr sprite, 
					global::StereoKit.SpriteType__StereoKit type, 
					string atlas_id)
		{
			// Setup
			byte* unsafe_atlas_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_atlas_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(atlas_id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sprite_create(
									sprite, 
									type, 
									unsafe_atlas_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_atlas_id);
			}
		}

		// Signature, sprite_create_file, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_SpriteType__StereoKit__SpriteType__StereoKit, [fwd] [in] [optional] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_create_file")]
		public static global::System.IntPtr sprite_create_file(
					string filename, 
					global::StereoKit.SpriteType__StereoKit type, 
					string atlas_id)
		{
			// Setup
			byte* unsafe_filename = default(byte*);
			byte* unsafe_atlas_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_filename = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(filename, true, false);
				unsafe_atlas_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(atlas_id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sprite_create_file(
									unsafe_filename, 
									type, 
									unsafe_atlas_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_filename);
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_atlas_id);
			}
		}

		// Signature, sprite_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_set_id")]
		public static void sprite_set_id(
					global::System.IntPtr sprite, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.sprite_set_id(
									sprite, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, sprite_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_release")]
		public static void sprite_release(global::System.IntPtr sprite)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.sprite_release(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sprite_get_aspect, [fwd] [return] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_aspect")]
		public static float sprite_get_aspect(global::System.IntPtr sprite)
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sprite_get_aspect(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sprite_draw, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_draw")]
		public static void sprite_draw(
					global::System.IntPtr sprite, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Color32__StereoKit color)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.sprite_draw(
									sprite, 
									pinned_transform, 
									color
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sprite_get_width, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_width")]
		public static int sprite_get_width(global::System.IntPtr sprite)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sprite_get_width(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sprite_get_height, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_height")]
		public static int sprite_get_height(global::System.IntPtr sprite)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sprite_get_height(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sprite_get_dimensions_normalized, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sprite_get_dimensions_normalized")]
		public static global::StereoKit.Vec2__StereoKit sprite_get_dimensions_normalized(global::System.IntPtr sprite)
		{
			// Setup
			global::StereoKit.Vec2__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sprite_get_dimensions_normalized(sprite);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, line_add, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color32__StereoKit__StereoKit__Color32__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "line_add")]
		public static void line_add(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec3__StereoKit end, 
					global::StereoKit.Color32__StereoKit color_start, 
					global::StereoKit.Color32__StereoKit color_end, 
					float thickness)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.line_add(
								start, 
								end, 
								color_start, 
								color_end, 
								thickness
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, line_add_listv, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_LinePoint__StereoKit__StereoKit__LinePoint__StereoKit *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "line_add_listv")]
		public static void line_add_listv(
					global::StereoKit.LinePoint__StereoKit[] points, 
					int count)
		{
			// Setup
			global::StereoKit.LinePoint__StereoKit* unsafe_points = default(global::StereoKit.LinePoint__StereoKit*);
			try
			{
				// Marshalling
				if (points == null)
					unsafe_points = null;
				else
				{
					if (points != null)
						unsafe_points = (global::StereoKit.LinePoint__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(points.Length * sizeof(global::StereoKit.LinePoint__StereoKit))));
					if (points != null)
						for (uint mcgIdx = 0; (mcgIdx < points.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_LinePoint__StereoKit__StereoKit__LinePoint__StereoKit points
							unsafe_points[mcgIdx] = points[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.line_add_listv(
									unsafe_points, 
									count
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_points);
			}
		}

		// Signature, render_set_clip, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_clip")]
		public static void render_set_clip(
					float near_plane, 
					float far_plane)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.render_set_clip(
								near_plane, 
								far_plane
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_get_cam_root, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_cam_root")]
		public static global::StereoKit.Matrix__StereoKit render_get_cam_root()
		{
			// Setup
			global::StereoKit.Matrix__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.render_get_cam_root();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_set_cam_root, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_cam_root")]
		public static void render_set_cam_root(global::StereoKit.Matrix__StereoKit cam_root)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.render_set_cam_root(cam_root);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_set_skytex, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_skytex")]
		public static void render_set_skytex(global::System.IntPtr sky_texture)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.render_set_skytex(sky_texture);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_get_skytex, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_get_skytex")]
		public static global::System.IntPtr render_get_skytex()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.render_get_skytex();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, render_set_skylight, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_SphericalHarmonics__StereoKit__StereoKit__SphericalHarmonics__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_set_skylight")]
		public static void render_set_skylight(ref global::StereoKit.SphericalHarmonics__StereoKit lighting_info)
		{
			// Marshalling
			fixed (global::StereoKit.SphericalHarmonics__StereoKit* pinned_lighting_info = &(lighting_info))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.render_set_skylight(pinned_lighting_info);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, render_enable_skytex, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_enable_skytex")]
		public static void render_enable_skytex(bool show_sky)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.render_enable_skytex((show_sky ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_enabled_skytex, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_enabled_skytex")]
		public static bool render_enabled_skytex()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.render_enabled_skytex();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, render_add_mesh, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_add_mesh")]
		public static void render_add_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Color__StereoKit color)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.render_add_mesh(
									mesh, 
									material, 
									pinned_transform, 
									color
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, render_add_model, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_add_model")]
		public static void render_add_model(
					global::System.IntPtr model, 
					ref global::StereoKit.Matrix__StereoKit transform, 
					global::StereoKit.Color__StereoKit color)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.render_add_model(
									model, 
									pinned_transform, 
									color
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, render_blit, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_blit")]
		public static void render_blit(
					global::System.IntPtr to_rendertarget, 
					global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.render_blit(
								to_rendertarget, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, render_screenshot, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "render_screenshot")]
		public static void render_screenshot(
					global::StereoKit.Vec3__StereoKit from_viewpt, 
					global::StereoKit.Vec3__StereoKit at, 
					int width, 
					int height, 
					string file)
		{
			// Setup
			byte* unsafe_file = default(byte*);
			try
			{
				// Marshalling
				unsafe_file = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(file, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.render_screenshot(
									from_viewpt, 
									at, 
									width, 
									height, 
									unsafe_file
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_file);
			}
		}

		// Signature, hierarchy_push, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Matrix__StereoKit__StereoKit__Matrix__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_push")]
		public static void hierarchy_push(ref global::StereoKit.Matrix__StereoKit transform)
		{
			// Marshalling
			fixed (global::StereoKit.Matrix__StereoKit* pinned_transform = &(transform))
			{
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.hierarchy_push(pinned_transform);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, hierarchy_pop, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_pop")]
		public static void hierarchy_pop()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.hierarchy_pop();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, hierarchy_set_enabled, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_set_enabled")]
		public static void hierarchy_set_enabled(bool enabled)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.hierarchy_set_enabled((enabled ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, hierarchy_is_enabled, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_is_enabled")]
		public static bool hierarchy_is_enabled()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.hierarchy_is_enabled();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, hierarchy_to_local_point, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_local_point")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_local_point(ref global::StereoKit.Vec3__StereoKit world_pt)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_world_pt = &(world_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.hierarchy_to_local_point(pinned_world_pt);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_local_direction, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_local_direction")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_local_direction(ref global::StereoKit.Vec3__StereoKit world_dir)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_world_dir = &(world_dir))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.hierarchy_to_local_direction(pinned_world_dir);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_local_rotation, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_local_rotation")]
		public static global::StereoKit.Quat__StereoKit hierarchy_to_local_rotation(ref global::StereoKit.Quat__StereoKit world_orientation)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_world_orientation = &(world_orientation))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.hierarchy_to_local_rotation(pinned_world_orientation);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_world_point, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_world_point")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_world_point(ref global::StereoKit.Vec3__StereoKit local_pt)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_local_pt = &(local_pt))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.hierarchy_to_world_point(pinned_local_pt);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_world_direction, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_world_direction")]
		public static global::StereoKit.Vec3__StereoKit hierarchy_to_world_direction(ref global::StereoKit.Vec3__StereoKit local_dir)
		{
			// Setup
			global::StereoKit.Vec3__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Vec3__StereoKit* pinned_local_dir = &(local_dir))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.hierarchy_to_world_direction(pinned_local_dir);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, hierarchy_to_world_rotation, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Quat__StereoKit__StereoKit__Quat__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "hierarchy_to_world_rotation")]
		public static global::StereoKit.Quat__StereoKit hierarchy_to_world_rotation(ref global::StereoKit.Quat__StereoKit local_orientation)
		{
			// Setup
			global::StereoKit.Quat__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Quat__StereoKit* pinned_local_orientation = &(local_orientation))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.hierarchy_to_world_rotation(pinned_local_orientation);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sound_find, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_find")]
		public static global::System.IntPtr sound_find(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sound_find(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, sound_set_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_set_id")]
		public static void sound_set_id(
					global::System.IntPtr sound, 
					string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.sound_set_id(
									sound, 
									unsafe_id
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, sound_create, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_create")]
		public static global::System.IntPtr sound_create(string filename)
		{
			// Setup
			byte* unsafe_filename = default(byte*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_filename = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(filename, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sound_create(unsafe_filename);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_filename);
			}
		}

		// Signature, sound_generate, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_AudioGenerator__StereoKit__StereoKit__AudioGenerator__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_generate")]
		public static global::System.IntPtr sound_generate(
					global::StereoKit.AudioGenerator__StereoKit function, 
					float duration)
		{
			// Setup
			void* unsafe_function = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_function = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.AudioGenerator,StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null"), 
									function
								);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.sound_generate(
									unsafe_function, 
									duration
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(function);
			}
		}

		// Signature, sound_play, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_play")]
		public static void sound_play(
					global::System.IntPtr sound, 
					global::StereoKit.Vec3__StereoKit at, 
					float volume)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.sound_play(
								sound, 
								at, 
								volume
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sound_release, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "sound_release")]
		public static void sound_release(global::System.IntPtr sound)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.sound_release(sound);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_pointer_count, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_pointer_count")]
		public static int input_pointer_count(global::StereoKit.InputSource__StereoKit filter)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.input_pointer_count(filter);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_pointer, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Pointer__StereoKit__StereoKit__Pointer__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [optional] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_pointer")]
		public static global::StereoKit.Pointer__StereoKit input_pointer(
					int index, 
					global::StereoKit.InputSource__StereoKit filter)
		{
			// Setup
			global::StereoKit.Pointer__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.input_pointer(
								index, 
								filter
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_hand, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand")]
		public static global::System.IntPtr input_hand(global::StereoKit.Handed__StereoKit hand)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.input_hand(hand);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_hand_override, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x000424E8] rg_StereoKit_HandJoint__StereoKit__StereoKit__HandJoint__StereoKit *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_override")]
		public static void input_hand_override(
					global::StereoKit.Handed__StereoKit hand, 
					global::StereoKit.HandJoint__StereoKit[] hand_joints)
		{
			// Setup
			global::StereoKit.HandJoint__StereoKit* unsafe_hand_joints = default(global::StereoKit.HandJoint__StereoKit*);
			try
			{
				// Marshalling
				if (hand_joints == null)
					unsafe_hand_joints = null;
				else
				{
					if (hand_joints != null)
						unsafe_hand_joints = (global::StereoKit.HandJoint__StereoKit*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(hand_joints.Length * sizeof(global::StereoKit.HandJoint__StereoKit))));
					if (hand_joints != null)
						for (uint mcgIdx = 0; (mcgIdx < hand_joints.Length); mcgIdx++)
						{
							// [fwd] [in] [optional] [EETypeRva:0x0004314C] StereoKit_HandJoint__StereoKit__StereoKit__HandJoint__StereoKit hand_joints
							unsafe_hand_joints[mcgIdx] = hand_joints[mcgIdx];
						}
				}
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.input_hand_override(
									hand, 
									unsafe_hand_joints
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_hand_joints);
			}
		}

		// Signature, input_hand_override__0, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_override")]
		public static void input_hand_override__0(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr hand_joints)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.input_hand_override__0(
								hand, 
								hand_joints
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_mouse, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_mouse")]
		public static global::System.IntPtr input_mouse()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.input_mouse();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_head, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_head")]
		public static global::System.IntPtr input_head()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.input_head();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_key, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Key__StereoKit__Key__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_key")]
		public static global::StereoKit.BtnState__StereoKit input_key(global::StereoKit.Key__StereoKit key)
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.input_key(key);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, input_hand_visible, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_visible")]
		public static void input_hand_visible(
					global::StereoKit.Handed__StereoKit hand, 
					bool visible)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.input_hand_visible(
								hand, 
								(visible ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_hand_solid, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_solid")]
		public static void input_hand_solid(
					global::StereoKit.Handed__StereoKit hand, 
					bool solid)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.input_hand_solid(
								hand, 
								(solid ? 1 : 0)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_hand_material, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_hand_material")]
		public static void input_hand_material(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr material)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.input_hand_material(
								hand, 
								material
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, input_subscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_InputEventCallback__StereoKit__StereoKit__InputEventCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_subscribe")]
		public static void input_subscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::StereoKit.InputEventCallback__StereoKit event_callback)
		{
			// Setup
			void* unsafe_event_callback = default(void*);
			try
			{
				// Marshalling
				unsafe_event_callback = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.InputEventCallback,StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null"), 
									event_callback
								);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.input_subscribe(
									source, 
									evt, 
									unsafe_event_callback
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(event_callback);
			}
		}

		// Signature, input_unsubscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_InputEventCallback__StereoKit__StereoKit__InputEventCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_unsubscribe")]
		public static void input_unsubscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::StereoKit.InputEventCallback__StereoKit event_callback)
		{
			// Setup
			void* unsafe_event_callback = default(void*);
			try
			{
				// Marshalling
				unsafe_event_callback = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.InputEventCallback,StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null"), 
									event_callback
								);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.input_unsubscribe(
									source, 
									evt, 
									unsafe_event_callback
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(event_callback);
			}
		}

		// Signature, input_fire_event, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_InputSource__StereoKit__InputSource__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "input_fire_event")]
		public static void input_fire_event(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::System.IntPtr pointer)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.input_fire_event(
								source, 
								evt, 
								pointer
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, log_write, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_LogLevel__StereoKit__LogLevel__StereoKit, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_write")]
		public static void log_write(
					global::StereoKit.LogLevel__StereoKit level, 
					string text)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.log_write(
									level, 
									unsafe_text
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, log_set_filter, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_LogLevel__StereoKit__LogLevel__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_set_filter")]
		public static void log_set_filter(global::StereoKit.LogLevel__StereoKit level)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.log_set_filter(level);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, log_subscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_LogCallback__StereoKit__StereoKit__LogCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_subscribe")]
		public static void log_subscribe(global::StereoKit.LogCallback__StereoKit on_log)
		{
			// Setup
			void* unsafe_on_log = default(void*);
			try
			{
				// Marshalling
				unsafe_on_log = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.LogCallback,StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null"), 
									on_log
								);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.log_subscribe(unsafe_on_log);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(on_log);
			}
		}

		// Signature, log_unsubscribe, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041EA8] StereoKit_LogCallback__StereoKit__StereoKit__LogCallback__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "log_unsubscribe")]
		public static void log_unsubscribe(global::StereoKit.LogCallback__StereoKit on_log)
		{
			// Setup
			void* unsafe_on_log = default(void*);
			try
			{
				// Marshalling
				unsafe_on_log = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("StereoKit.LogCallback,StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null"), 
									on_log
								);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.log_unsubscribe(unsafe_on_log);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(on_log);
			}
		}

		// Signature, ui_show_volumes, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_show_volumes")]
		public static void ui_show_volumes(bool show)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_show_volumes((show ? 1 : 0));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_settings, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_UISettings__StereoKit__StereoKit__UISettings__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_settings")]
		public static void ui_settings(global::StereoKit.UISettings__StereoKit settings)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_settings(settings);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_set_color, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Color__StereoKit__StereoKit__Color__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_set_color")]
		public static void ui_set_color(global::StereoKit.Color__StereoKit color)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_set_color(color);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_layout_area, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_layout_area")]
		public static void ui_layout_area(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec2__StereoKit dimensions)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_layout_area(
								start, 
								dimensions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_area_remaining, [fwd] [return] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_area_remaining")]
		public static global::StereoKit.Vec2__StereoKit ui_area_remaining()
		{
			// Setup
			global::StereoKit.Vec2__StereoKit unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_area_remaining();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_nextline, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_nextline")]
		public static void ui_nextline()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_nextline();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_sameline, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_sameline")]
		public static void ui_sameline()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_sameline();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_line_height, [fwd] [return] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_line_height")]
		public static float ui_line_height()
		{
			// Setup
			float unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_line_height();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ui_reserve_box, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_reserve_box")]
		public static void ui_reserve_box(global::StereoKit.Vec2__StereoKit size)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_reserve_box(size);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_space, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_space")]
		public static void ui_space(float space)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_space(space);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_push_id, [fwd] [return] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_push_id")]
		public static ulong ui_push_id(string id)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			ulong unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_push_id(unsafe_id);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, ui_pop_id, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_pop_id")]
		public static void ui_pop_id()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_pop_id();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_is_interacting, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_is_interacting")]
		public static bool ui_is_interacting(global::StereoKit.Handed__StereoKit hand)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_is_interacting(hand);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, ui_volume_at, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_volume_at")]
		public static bool ui_volume_at(
					string id, 
					global::StereoKit.Bounds__StereoKit bounds)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_volume_at(
									unsafe_id, 
									bounds
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, ui_interact_volume_at, [fwd] [return] [EETypeRva:0x00042D60] StereoKit_BtnState__StereoKit__BtnState__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00042D60] StereoKit_Handed__StereoKit__Handed__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_interact_volume_at")]
		public static global::StereoKit.BtnState__StereoKit ui_interact_volume_at(
					global::StereoKit.Bounds__StereoKit bounds, 
					out global::StereoKit.Handed__StereoKit out_hand)
		{
			// Setup
			global::StereoKit.BtnState__StereoKit unsafe___value;
			// Marshalling
			fixed (global::StereoKit.Handed__StereoKit* pinned_out_hand = &(out_hand))
			{
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_interact_volume_at(
									bounds, 
									pinned_out_hand
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, ui_button_at, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_at")]
		public static bool ui_button_at(
					string text, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_button_at(
									unsafe_text, 
									window_relative_pos, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_button_round_at, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_round_at")]
		public static bool ui_button_round_at(
					string text, 
					global::System.IntPtr image_sprite, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					float diameter)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_button_round_at(
									unsafe_text, 
									image_sprite, 
									window_relative_pos, 
									diameter
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_toggle_at, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_toggle_at")]
		public static bool ui_toggle_at(
					string text, 
					ref bool pressed, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe_pressed;
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				unsafe_pressed = (pressed ? 1 : 0);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_toggle_at(
									unsafe_text, 
									&(unsafe_pressed), 
									window_relative_pos, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				pressed = unsafe_pressed != 0;
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_hslider_at, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec3__StereoKit__StereoKit__Vec3__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_hslider_at")]
		public static bool ui_hslider_at(
					string id, 
					ref float value, 
					float min, 
					float max, 
					float step, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				fixed (float* pinned_value = &(value))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_hslider_at(
										unsafe_id, 
										pinned_value, 
										min, 
										max, 
										step, 
										window_relative_pos, 
										size
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, ui_label, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_label")]
		public static void ui_label(
					string text, 
					bool use_padding)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.ui_label(
									unsafe_text, 
									(use_padding ? 1 : 0)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_label_sz, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_label_sz")]
		public static void ui_label_sz(
					string text, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				global::__Interop.StereoKitC_dll_PInvokes.ui_label_sz(
									unsafe_text, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_image, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_image")]
		public static void ui_image(
					global::System.IntPtr sprite_image, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_image(
								sprite_image, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_button, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button")]
		public static bool ui_button(string text)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_button(unsafe_text);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_button_sz, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_sz")]
		public static bool ui_button_sz(
					string text, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_button_sz(
									unsafe_text, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_button_round, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_button_round")]
		public static bool ui_button_round(
					string id, 
					global::System.IntPtr image, 
					float diameter)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_button_round(
									unsafe_id, 
									image, 
									diameter
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, ui_toggle, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040848] bool__System.Boolean, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_toggle")]
		public static bool ui_toggle(
					string text, 
					ref bool pressed)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe_pressed;
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				unsafe_pressed = (pressed ? 1 : 0);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_toggle(
									unsafe_text, 
									&(unsafe_pressed)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				pressed = unsafe_pressed != 0;
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_toggle_sz, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_toggle_sz")]
		public static bool ui_toggle_sz(
					string text, 
					ref bool pressed, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe_pressed;
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				unsafe_pressed = (pressed ? 1 : 0);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_toggle_sz(
									unsafe_text, 
									&(unsafe_pressed), 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				pressed = unsafe_pressed != 0;
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_input, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [EETypeRva:0x00041CF4] System_Text_StringBuilder__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_input")]
		public static bool ui_input(
					string id, 
					global::System.Text.StringBuilder buffer, 
					int buffer_size, 
					global::StereoKit.Vec2__StereoKit size)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			byte* unsafe_buffer = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				if (buffer == null)
					unsafe_buffer = null;
				else
				{
					unsafe_buffer = (byte*)global::System.Runtime.InteropServices.McgMarshal.CoTaskMemAllocAndZeroMemory(new global::System.IntPtr(checked(buffer.Capacity * global::System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize 
										+ 2)));
					if (unsafe_buffer == null)
						throw new global::System.OutOfMemoryException();
				}
				if (unsafe_buffer != null)
					global::System.Runtime.InteropServices.McgMarshal.StringBuilderToAnsiString(
										buffer, 
										unsafe_buffer, 
										true, 
										false
									);
				// Call to native method
				unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_input(
									unsafe_id, 
									unsafe_buffer, 
									buffer_size, 
									size
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (buffer != null)
					global::System.Runtime.InteropServices.McgMarshal.AnsiStringToStringBuilder(
										unsafe_buffer, 
										buffer
									);
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
				if (unsafe_buffer != null)
					global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_buffer);
			}
		}

		// Signature, ui_hslider, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [EETypeRva:0x000419B0] float__float, [fwd] [in] [optional] [EETypeRva:0x000419B0] float__float, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_hslider")]
		public static bool ui_hslider(
					string id, 
					ref float value, 
					float min, 
					float max, 
					float step, 
					float width)
		{
			// Setup
			byte* unsafe_id = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_id = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(id, true, false);
				fixed (float* pinned_value = &(value))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_hslider(
										unsafe_id, 
										pinned_value, 
										min, 
										max, 
										step, 
										width
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_id);
			}
		}

		// Signature, ui_handle_begin, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Bounds__StereoKit__StereoKit__Bounds__StereoKit, [fwd] [in] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIMove__StereoKit__UIMove__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_handle_begin")]
		public static bool ui_handle_begin(
					string text, 
					ref global::StereoKit.Pose__StereoKit movement, 
					global::StereoKit.Bounds__StereoKit handle, 
					bool draw, 
					global::StereoKit.UIMove__StereoKit move_type)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				fixed (global::StereoKit.Pose__StereoKit* pinned_movement = &(movement))
				{
					// Call to native method
					unsafe___value = global::__Interop.StereoKitC_dll_PInvokes.ui_handle_begin(
										unsafe_text, 
										pinned_movement, 
										handle, 
										(draw ? 1 : 0), 
										move_type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value != 0;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_handle_end, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_handle_end")]
		public static void ui_handle_end()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_handle_end();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, ui_window_begin, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x00041C30] string__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] StereoKit_Pose__StereoKit__StereoKit__Pose__StereoKit, [fwd] [in] [EETypeRva:0x0004314C] StereoKit_Vec2__StereoKit__StereoKit__Vec2__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIWin__StereoKit__UIWin__StereoKit, [fwd] [in] [EETypeRva:0x00042D60] StereoKit_UIMove__StereoKit__UIMove__StereoKit, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_window_begin")]
		public static void ui_window_begin(
					string text, 
					ref global::StereoKit.Pose__StereoKit pose, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIWin__StereoKit window_type, 
					global::StereoKit.UIMove__StereoKit move_type)
		{
			// Setup
			byte* unsafe_text = default(byte*);
			try
			{
				// Marshalling
				unsafe_text = global::System.Runtime.InteropServices.McgMarshal.StringToAnsiString(text, true, false);
				fixed (global::StereoKit.Pose__StereoKit* pinned_pose = &(pose))
				{
					// Call to native method
					global::__Interop.StereoKitC_dll_PInvokes.ui_window_begin(
										unsafe_text, 
										pinned_pose, 
										size, 
										window_type, 
										move_type
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SafeCoTaskMemFree(unsafe_text);
			}
		}

		// Signature, ui_window_end, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.NativeAPI", "ui_window_end")]
		public static void ui_window_end()
		{
			// Marshalling
			// Call to native method
			global::__Interop.StereoKitC_dll_PInvokes.ui_window_end();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'kernel32.dll'
	/// </summary>
	public unsafe static partial class kernel32_dll
	{
		// Signature, GetStdHandle, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.Log", "GetStdHandle")]
		public static global::System.IntPtr GetStdHandle(int nStdHandle)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetStdHandle(nStdHandle);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value;
		}

		// Signature, GetConsoleMode, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.Log", "GetConsoleMode")]
		public static bool GetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					out uint lpMode)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (uint* pinned_lpMode = &(lpMode))
			{
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetConsoleMode(
									hConsoleHandle, 
									pinned_lpMode
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, SetConsoleMode, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("StereoKit, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null", "StereoKit.Log", "SetConsoleMode")]
		public static bool SetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					uint dwMode)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.SetConsoleMode(
								hConsoleHandle, 
								dwMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value != 0;
		}

		// Signature, GetCPInfoExW, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] __Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages___ptr__Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetCPInfoExW")]
		public static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetCPInfoExW(
								CodePage, 
								dwFlags, 
								((global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages*)lpCPInfoEx)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, CloseHandle, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "CloseHandle")]
		public static bool CloseHandle(global::System.IntPtr handle)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.CloseHandle(handle);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value != 0;
		}

		// Signature, SetThreadErrorMode, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "SetThreadErrorMode")]
		public static bool SetThreadErrorMode(
					uint dwNewMode, 
					out uint lpOldMode)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (uint* pinned_lpOldMode = &(lpOldMode))
			{
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.SetThreadErrorMode(
									dwNewMode, 
									pinned_lpOldMode
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, GetFileInformationByHandleEx, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00042D60] __Interop_Kernel32_FILE_INFO_BY_HANDLE_CLASS__System_IO_FileSystem__Interop_Kernel32_FILE_INFO_BY_HANDLE_CLASS__System_IO_FileSystem, [fwd] [in] [EETypeRva:0x00042A40] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetFileInformationByHandleEx")]
		public static bool GetFileInformationByHandleEx(
					global::System.IntPtr hFile, 
					global::_.Interop_Kernel32_FILE_INFO_BY_HANDLE_CLASS__System_IO_FileSystem FileInformationClass, 
					byte[] lpFileInformation, 
					uint dwBufferSize)
		{
			// Setup
			byte* unsafe_lpFileInformation;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_lpFileInformation = ((lpFileInformation != null 
						&& lpFileInformation.Length == 0) ? new byte[1] : lpFileInformation))
			{
				unsafe_lpFileInformation = (byte*)pinned_lpFileInformation;
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetFileInformationByHandleEx(
									hFile, 
									FileInformationClass, 
									unsafe_lpFileInformation, 
									dwBufferSize
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, CreateFile2, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042D60] System_IO_FileShare__System_Private_CoreLib__FileShare__System_Private_CoreLib, [fwd] [in] [EETypeRva:0x00042D60] System_IO_FileMode__System_Private_CoreLib__FileMode__System_Private_CoreLib, [fwd] [in] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] __Interop_Kernel32_CREATEFILE2_EXTENDED_PARAMETERS__System_IO_FileSystem____Interop_Kernel32_CREATEFILE2_EXTENDED_PARAMETERS__System_IO_FileSystem, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "CreateFile2")]
		public static global::System.IntPtr CreateFile2(
					string lpFileName, 
					int dwDesiredAccess, 
					global::System_IO.FileShare__System_Private_CoreLib dwShareMode, 
					global::System_IO.FileMode__System_Private_CoreLib dwCreationDisposition, 
					ref global::_.Interop_Kernel32_CREATEFILE2_EXTENDED_PARAMETERS__System_IO_FileSystem parameters)
		{
			// Setup
			ushort* unsafe_lpFileName = default(ushort*);
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (char* pinned_lpFileName = lpFileName)
			{
				unsafe_lpFileName = (ushort*)pinned_lpFileName;
				fixed (global::_.Interop_Kernel32_CREATEFILE2_EXTENDED_PARAMETERS__System_IO_FileSystem* pinned_parameters = &(parameters))
				{
					global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
					// Call to native method
					unsafe___value = global::__Interop.kernel32_dll_PInvokes.CreateFile2(
										unsafe_lpFileName, 
										dwDesiredAccess, 
										dwShareMode, 
										dwCreationDisposition, 
										pinned_parameters
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, GetFileAttributesExPrivate, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x00042D60] __Interop_Kernel32_GET_FILEEX_INFO_LEVELS__System_IO_FileSystem__Interop_Kernel32_GET_FILEEX_INFO_LEVELS__System_IO_FileSystem, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] __Interop_Kernel32_WIN32_FILE_ATTRIBUTE_DATA__System_IO_FileSystem____Interop_Kernel32_WIN32_FILE_ATTRIBUTE_DATA__System_IO_FileSystem, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetFileAttributesExPrivate")]
		public static bool GetFileAttributesExPrivate(
					string name, 
					global::_.Interop_Kernel32_GET_FILEEX_INFO_LEVELS__System_IO_FileSystem fileInfoLevel, 
					ref global::_.Interop_Kernel32_WIN32_FILE_ATTRIBUTE_DATA__System_IO_FileSystem lpFileInformation)
		{
			// Setup
			ushort* unsafe_name = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_name = name)
			{
				unsafe_name = (ushort*)pinned_name;
				fixed (global::_.Interop_Kernel32_WIN32_FILE_ATTRIBUTE_DATA__System_IO_FileSystem* pinned_lpFileInformation = &(lpFileInformation))
				{
					global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
					// Call to native method
					unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetFileAttributesExPrivate(
										unsafe_name, 
										fileInfoLevel, 
										pinned_lpFileInformation
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
				}
			}
			// Return
			return unsafe___value != 0;
		}

		// Signature, FindFirstFileExPrivate, [fwd] [return] [EETypeRva:0x000434A4] Microsoft_Win32_SafeHandles_SafeFindHandle__System_IO_FileSystem____w64 int, [fwd] [in] [EETypeRva:0x00041B44] string__wchar_t *, [fwd] [in] [EETypeRva:0x00042D60] __Interop_Kernel32_FINDEX_INFO_LEVELS__System_IO_FileSystem__Interop_Kernel32_FINDEX_INFO_LEVELS__System_IO_FileSystem, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004314C] __Interop_Kernel32_WIN32_FIND_DATA__System_IO_FileSystem____Interop_Kernel32_WIN32_FIND_DATA__System_IO_FileSystem, [fwd] [in] [EETypeRva:0x00042D60] __Interop_Kernel32_FINDEX_SEARCH_OPS__System_IO_FileSystem__Interop_Kernel32_FINDEX_SEARCH_OPS__System_IO_FileSystem, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "FindFirstFileExPrivate")]
		public static global::Microsoft.Win32.SafeHandles.SafeFindHandle__System_IO_FileSystem FindFirstFileExPrivate(
					string lpFileName, 
					global::_.Interop_Kernel32_FINDEX_INFO_LEVELS__System_IO_FileSystem fInfoLevelId, 
					ref global::_.Interop_Kernel32_WIN32_FIND_DATA__System_IO_FileSystem lpFindFileData, 
					global::_.Interop_Kernel32_FINDEX_SEARCH_OPS__System_IO_FileSystem fSearchOp, 
					global::System.IntPtr lpSearchFilter, 
					int dwAdditionalFlags)
		{
			// Setup
			ushort* unsafe_lpFileName = default(ushort*);
			global::Microsoft.Win32.SafeHandles.SafeFindHandle__System_IO_FileSystem __value;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (char* pinned_lpFileName = lpFileName)
			{
				unsafe_lpFileName = (ushort*)pinned_lpFileName;
				fixed (global::_.Interop_Kernel32_WIN32_FIND_DATA__System_IO_FileSystem* pinned_lpFindFileData = &(lpFindFileData))
				{
					__value = new global::Microsoft.Win32.SafeHandles.SafeFindHandle__System_IO_FileSystem();
					global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
					// Call to native method
					unsafe___value = global::__Interop.kernel32_dll_PInvokes.FindFirstFileExPrivate(
										unsafe_lpFileName, 
										fInfoLevelId, 
										pinned_lpFindFileData, 
										fSearchOp, 
										lpSearchFilter, 
										dwAdditionalFlags
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
					global::System.Runtime.InteropServices.McgMarshal.InitializeHandle(
										__value, 
										unsafe___value
									);
				}
			}
			// Return
			return __value;
		}

		// Signature, FormatMessage, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x00042A40] rg_System_IntPtr____w64 int *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "FormatMessage")]
		public static int FormatMessage(
					int dwFlags, 
					global::System.IntPtr lpSource, 
					uint dwMessageId, 
					int dwLanguageId, 
					char* lpBuffer, 
					int nSize, 
					global::System.IntPtr[] arguments)
		{
			// Setup
			global::System.IntPtr* unsafe_arguments;
			int unsafe___value;
			// Marshalling
			fixed (global::System.IntPtr* pinned_arguments = ((arguments != null 
						&& arguments.Length == 0) ? new global::System.IntPtr[1] : arguments))
			{
				unsafe_arguments = (global::System.IntPtr*)pinned_arguments;
				global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
				// Call to native method
				unsafe___value = global::__Interop.kernel32_dll_PInvokes.FormatMessage(
									dwFlags, 
									lpSource, 
									dwMessageId, 
									dwLanguageId, 
									((ushort*)lpBuffer), 
									nSize, 
									unsafe_arguments
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			}
			// Return
			return unsafe___value;
		}

		// Signature, FindClose, [fwd] [return] [EETypeRva:0x00040848] bool__System.Boolean, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "FindClose")]
		public static bool FindClose(global::System.IntPtr hFindFile)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			global::System.Runtime.InteropServices.McgMarshal.ClearLastWin32Error();
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.FindClose(hFindFile);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.SaveLastWin32Error();
			// Return
			return unsafe___value != 0;
		}
	}

	/// <summary>
	/// P/Invoke class for module '[MRT]'
	/// </summary>
	public unsafe static partial class _MRT_
	{
		// Signature, RhpGetFuncEvalParameterBufferSize, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetFuncEvalParameterBufferSize")]
		public static uint RhpGetFuncEvalParameterBufferSize()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetFuncEvalParameterBufferSize();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpGetFuncEvalMode, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetFuncEvalMode")]
		public static uint RhpGetFuncEvalMode()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetFuncEvalMode();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpRecordDebuggeeInitiatedHandle, [fwd] [return] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpRecordDebuggeeInitiatedHandle")]
		public static uint RhpRecordDebuggeeInitiatedHandle(void* objectHandle)
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpRecordDebuggeeInitiatedHandle(((void*)objectHandle));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpVerifyDebuggerCleanup, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpVerifyDebuggerCleanup")]
		public static void RhpVerifyDebuggerCleanup()
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhpVerifyDebuggerCleanup();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, RhpGetCurrentThread, [fwd] [return] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetCurrentThread")]
		public static global::System.IntPtr RhpGetCurrentThread()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetCurrentThread();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhWaitForPendingFinalizers, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhWaitForPendingFinalizers")]
		public static void RhWaitForPendingFinalizers(int allowReentrantWait)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhWaitForPendingFinalizers(allowReentrantWait);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, _RhYield, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_RhYield")]
		public static int _RhYield()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes._RhYield();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhFlushProcessWriteBuffers, [fwd] [return] [EETypeRva:0x00041F6C] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhFlushProcessWriteBuffers")]
		public static void RhFlushProcessWriteBuffers()
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhFlushProcessWriteBuffers();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, RhCompatibleReentrantWaitAny, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr___ptr__w64 int *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCompatibleReentrantWaitAny")]
		public static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhCompatibleReentrantWaitAny(
								alertable, 
								timeout, 
								count, 
								((global::System.IntPtr*)handles)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhCallDescrWorkerNative, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCallDescrWorkerNative")]
		public static void RhCallDescrWorkerNative(global::System.IntPtr callDescr)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhCallDescrWorkerNative(callDescr);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, _ecvt_s, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] double__double, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] int___ptrint *, [fwd] [in] [EETypeRva:0x000419B0] int___ptrint *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_ecvt_s")]
		public static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes._ecvt_s(
								((byte*)buffer), 
								sizeInBytes, 
								value, 
								count, 
								((int*)dec), 
								((int*)sign)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, memmove, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memmove")]
		public static void memmove(
					byte* dmem, 
					byte* smem, 
					ulong size)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.memmove(
								((byte*)dmem), 
								((byte*)smem), 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, memset, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memset")]
		public static void memset(
					byte* mem, 
					int value, 
					ulong size)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.memset(
								((byte*)mem), 
								value, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module '*'
	/// </summary>
	public unsafe static partial class _
	{
		// Signature, CallingConventionConverter_GetStubs, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.TypeLoader, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.Runtime.TypeLoader.CallConverterThunk", "CallingConventionConverter_GetStubs")]
		public static void CallingConventionConverter_GetStubs(
					out global::System.IntPtr returnVoidStub, 
					out global::System.IntPtr returnIntegerStub, 
					out global::System.IntPtr commonStub)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_returnVoidStub = &(returnVoidStub))
				fixed (global::System.IntPtr* pinned_returnIntegerStub = &(returnIntegerStub))
					fixed (global::System.IntPtr* pinned_commonStub = &(commonStub))
					{
						// Call to native method
						global::__Interop.__PInvokes.CallingConventionConverter_GetStubs(
											pinned_returnVoidStub, 
											pinned_returnIntegerStub, 
											pinned_commonStub
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-string-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_string_l1_1_0_dll
	{
		// Signature, WindowsCreateStringReference, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, [fwd] [in] [EETypeRva:0x000419B0] System_Runtime_InteropServices_HSTRING_HEADER__System_Private_Interop___ptrSystem_Runtime_InteropServices__HSTRING_HEADER__System_Private_Interop *, [fwd] [in] [EETypeRva:0x000419B0] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore", "WindowsCreateStringReference")]
		public static int WindowsCreateStringReference(
					char* sourceString, 
					uint length, 
					global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop* phstringHeader, 
					void* hstring)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_winrt_string_l1_1_0_dll_PInvokes.WindowsCreateStringReference(
								((ushort*)sourceString), 
								length, 
								((global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop*)phstringHeader), 
								((void*)hstring)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-errorhandling-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll
	{
		// Signature, GetLastError, [fwd] [return] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetLastError")]
		public static int GetLastError()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.GetLastError();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, SetLastError, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "SetLastError")]
		public static void SetLastError(uint dwErrCode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.SetLastError(dwErrCode);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll
	{
		// Signature, RoInitialize, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "RoInitialize")]
		public static int RoInitialize(uint initType)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_winrt_l1_1_0_dll_PInvokes.RoInitialize(initType);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-localization-l1-2-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll
	{
		// Signature, IsValidLocaleName, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "IsValidLocaleName")]
		public static int IsValidLocaleName(char* lpLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.IsValidLocaleName(((ushort*)lpLocaleName));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ResolveLocaleName, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "ResolveLocaleName")]
		public static int ResolveLocaleName(
					char* lpNameToResolve, 
					char* lpLocaleName, 
					int cchLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.ResolveLocaleName(
								((ushort*)lpNameToResolve), 
								((ushort*)lpLocaleName), 
								cchLocaleName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-robuffer-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll
	{
		// Signature, RoGetBufferMarshaler, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00043660] System_Runtime_InteropServices_IMarshal__System_Runtime_WindowsRuntime__System_Runtime_InteropServices__IMarshal__System_Runtime_WindowsRuntime *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop+mincore", "RoGetBufferMarshaler")]
		public static int RoGetBufferMarshaler(out global::System_Runtime_InteropServices.IMarshal__System_Runtime_WindowsRuntime bufferMarshalerPtr)
		{
			// Setup
			void* unsafe_bufferMarshalerPtr = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_bufferMarshalerPtr = null;
				// Call to native method
				unsafe___value = global::__Interop.api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes.RoGetBufferMarshaler(&(unsafe_bufferMarshalerPtr));
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				bufferMarshalerPtr = (global::System_Runtime_InteropServices.IMarshal__System_Runtime_WindowsRuntime)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bufferMarshalerPtr), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Public" +
											"KeyToken=b77a5c561934e089")
								);
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bufferMarshalerPtr)));
			}
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-com-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll
	{
		// Signature, CoCreateInstance, [fwd] [return] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [in] [EETypeRva:0x000419B0] byte___ptrunsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.StackTraceGenerator.StackTraceGenerator", "CoCreateInstance")]
		public static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					out global::System.IntPtr ppv)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::System.IntPtr* pinned_ppv = &(ppv))
			{
				// Call to native method
				unsafe___value = global::__Interop.api_ms_win_core_com_l1_1_0_dll_PInvokes.CoCreateInstance(
									((byte*)rclsid), 
									pUnkOuter, 
									dwClsContext, 
									((byte*)riid), 
									pinned_ppv
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'OleAut32'
	/// </summary>
	public unsafe static partial class OleAut32
	{
		// Signature, SysFreeString, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.LightweightInterop.MarshalExtensions", "SysFreeString")]
		public static void SysFreeString(global::System.IntPtr bstr)
		{
			// Marshalling
			// Call to native method
			global::__Interop.OleAut32_PInvokes.SysFreeString(bstr);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	public unsafe static partial class StereoKitC_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sk_init(
					byte* app_name, 
					global::StereoKit.Runtime__StereoKit preferred_runtime, 
					int fallback);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_shutdown();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_quit();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sk_step(void* app_update);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Runtime__StereoKit sk_active_runtime();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sk_set_settings(global::StereoKit.Settings__StereoKit__Impl.UnsafeType settings);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.SystemInfo__StereoKit sk_system_info();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sk_version_name();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong sk_version_id();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_getf_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_get_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_getf();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_get();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_elapsedf_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_elapsed_unscaled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float time_elapsedf();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double time_elapsed();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void time_scale(double scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void time_set_time(
					double total_seconds, 
					double frame_elapsed_seconds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_difference(
					global::StereoKit.Quat__StereoKit* a, 
					global::StereoKit.Quat__StereoKit* b);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_lookat(
					global::StereoKit.Vec3__StereoKit* from, 
					global::StereoKit.Vec3__StereoKit* at);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_lookat_up(
					global::StereoKit.Vec3__StereoKit* from, 
					global::StereoKit.Vec3__StereoKit* at, 
					global::StereoKit.Vec3__StereoKit* up);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_from_angles(
					float pitch_x_deg, 
					float yaw_y_deg, 
					float roll_z_deg);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_slerp(
					global::StereoKit.Quat__StereoKit* a, 
					global::StereoKit.Quat__StereoKit* b, 
					float t);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_normalize(global::StereoKit.Quat__StereoKit* a);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_inverse(global::StereoKit.Quat__StereoKit* a);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit quat_mul(
					global::StereoKit.Quat__StereoKit* a, 
					global::StereoKit.Quat__StereoKit* b);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit quat_mul_vec(
					global::StereoKit.Quat__StereoKit* a, 
					global::StereoKit.Vec3__StereoKit* b);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void matrix_inverse(
					global::StereoKit.Matrix__StereoKit* a, 
					global::StereoKit.Matrix__StereoKit* out_matrix);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void matrix_mul(
					global::StereoKit.Matrix__StereoKit* a, 
					global::StereoKit.Matrix__StereoKit* b, 
					global::StereoKit.Matrix__StereoKit* out_matrix);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit matrix_mul_point(
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Vec3__StereoKit* point);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit matrix_mul_direction(
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Vec3__StereoKit* direction);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit matrix_trs(
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* orientation, 
					global::StereoKit.Vec3__StereoKit* scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void matrix_trs_out(
					global::StereoKit.Matrix__StereoKit* out_result, 
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* orientation, 
					global::StereoKit.Vec3__StereoKit* scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit pose_matrix(
					global::StereoKit.Pose__StereoKit* pose, 
					global::StereoKit.Vec3__StereoKit scale);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit vec3_cross(
					global::StereoKit.Vec3__StereoKit* a, 
					global::StereoKit.Vec3__StereoKit* b);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int plane_ray_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int plane_line_intersect(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit p1, 
					global::StereoKit.Vec3__StereoKit p2, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit plane_point_closest(
					global::StereoKit.Plane__StereoKit plane, 
					global::StereoKit.Vec3__StereoKit pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sphere_ray_intersect(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sphere_point_contains(
					global::StereoKit.Sphere__StereoKit sphere, 
					global::StereoKit.Vec3__StereoKit pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int bounds_ray_intersect(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Ray__StereoKit ray, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int bounds_point_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int bounds_line_contains(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Vec3__StereoKit linePt1, 
					global::StereoKit.Vec3__StereoKit linePt2);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit color_hsv(
					float hue, 
					float saturation, 
					float value, 
					float transparency);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit color_to_hsv(global::StereoKit.Color__StereoKit* color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit color_lab(
					float l, 
					float a, 
					float b, 
					float transparency);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit color_to_lab(global::StereoKit.Color__StereoKit* color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr gradient_create();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr gradient_create_keys(
					global::StereoKit.GradientKey__StereoKit* keys, 
					int count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_add(
					global::System.IntPtr gradient, 
					global::StereoKit.Color__StereoKit color, 
					float position);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_set(
					global::System.IntPtr gradient, 
					int index, 
					global::StereoKit.Color__StereoKit color, 
					float position);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_remove(
					global::System.IntPtr gradient, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int gradient_count(global::System.IntPtr gradient);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit gradient_get(
					global::System.IntPtr gradient, 
					float at);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color32__StereoKit gradient_get32(
					global::System.IntPtr gradient, 
					float at);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void gradient_release(global::System.IntPtr gradient);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.SphericalHarmonics__StereoKit sh_create(
					global::StereoKit.SHLight__StereoKit* lights, 
					int light_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Color__StereoKit sh_lookup(
					global::StereoKit.SphericalHarmonics__StereoKit* lookup, 
					global::StereoKit.Vec3__StereoKit normal);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_create();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_id(
					global::System.IntPtr mesh, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_release(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_keep_data(
					global::System.IntPtr mesh, 
					int keep_data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_get_keep_data(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_verts(
					global::System.IntPtr mesh, 
					global::StereoKit.Vertex__StereoKit* vertices, 
					int vertex_count, 
					int calculate_bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_get_verts(
					global::System.IntPtr mesh, 
					global::System.IntPtr* out_vertices, 
					int* out_vertex_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_inds(
					global::System.IntPtr mesh, 
					uint* indices, 
					int index_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_get_inds(
					global::System.IntPtr mesh, 
					global::System.IntPtr* out_indices, 
					int* out_index_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_draw_inds(
					global::System.IntPtr mesh, 
					int index_count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void mesh_set_bounds(
					global::System.IntPtr mesh, 
					global::StereoKit.Bounds__StereoKit* bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Bounds__StereoKit mesh_get_bounds(global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int mesh_ray_intersect(
					global::System.IntPtr mesh, 
					global::StereoKit.Ray__StereoKit model_space_ray, 
					global::StereoKit.Vec3__StereoKit* out_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_plane(
					global::StereoKit.Vec2__StereoKit dimensions, 
					global::StereoKit.Vec3__StereoKit plane_normal, 
					global::StereoKit.Vec3__StereoKit plane_top_direction, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_sphere(
					float diameter, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_rounded_cube(
					global::StereoKit.Vec3__StereoKit dimensions, 
					float edge_radius, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr mesh_gen_cylinder(
					float diameter, 
					float depth, 
					global::StereoKit.Vec3__StereoKit direction, 
					int subdivisions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create(
					global::StereoKit.TexType__StereoKit type, 
					global::StereoKit.TexFormat__StereoKit format);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_mem(
					byte* data, 
					int data_size, 
					int srgb_data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_file(
					byte* file, 
					int srgb_data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_file(
					byte* equirectangular_file, 
					int srgb_data, 
					global::System.IntPtr lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_create_cubemap_file", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_file__0(
					byte* equirectangular_file, 
					int srgb_data, 
					global::StereoKit.SphericalHarmonics__StereoKit* lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_files(
					byte** cube_face_file_xxyyzz, 
					int srgb_data, 
					global::System.IntPtr lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_create_cubemap_files", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_create_cubemap_files__0(
					byte** cube_face_file_xxyyzz, 
					int srgb_data, 
					global::StereoKit.SphericalHarmonics__StereoKit* lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_id(
					global::System.IntPtr texture, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_release(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::System.IntPtr data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__0(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color32__StereoKit* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__1(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					global::StereoKit.Color__StereoKit* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__2(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					byte* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__3(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					ushort* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_set_colors", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_colors__4(
					global::System.IntPtr texture, 
					int width, 
					int height, 
					float* data);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_add_zbuffer(
					global::System.IntPtr texture, 
					global::StereoKit.TexFormat__StereoKit format);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_rtarget_clear(
					global::System.IntPtr render_target, 
					global::StereoKit.Color32__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_rtarget_set_active(global::System.IntPtr render_target);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_gen_cubemap(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					global::System.IntPtr lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="tex_gen_cubemap", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_gen_cubemap__0(
					global::System.IntPtr gradient, 
					global::StereoKit.Vec3__StereoKit gradient_dir, 
					int resolution, 
					global::StereoKit.SphericalHarmonics__StereoKit* lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr tex_gen_cubemap_sh(
					global::StereoKit.SphericalHarmonics__StereoKit* lighting, 
					int resolution);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TexFormat__StereoKit tex_get_format(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int tex_get_width(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int tex_get_height(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_sample(
					global::System.IntPtr texture, 
					global::StereoKit.TexSample__StereoKit sample);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TexSample__StereoKit tex_get_sample(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_address(
					global::System.IntPtr texture, 
					global::StereoKit.TexAddress__StereoKit address_mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TexAddress__StereoKit tex_get_address(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void tex_set_anisotropy(
					global::System.IntPtr texture, 
					int anisotropy_level);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int tex_get_anisotropy(global::System.IntPtr texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr font_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr font_create(byte* file);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void font_release(global::System.IntPtr font);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr font_get_tex(global::System.IntPtr font);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int shader_compile(
					byte* hlsl, 
					byte* opt_filename, 
					global::System.IntPtr* out_data, 
					ulong* out_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="shader_compile", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int shader_compile__0(
					byte* hlsl, 
					global::System.IntPtr opt_filename, 
					global::System.IntPtr* out_data, 
					ulong* out_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_create_file(byte* filename);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_create_hlsl(byte* hlsl);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr shader_create_mem(
					byte* data, 
					ulong data_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void shader_set_id(
					global::System.IntPtr shader, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static byte* shader_get_name(global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int shader_set_code(
					global::System.IntPtr shader, 
					byte* data, 
					int data_size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int shader_set_codefile(
					global::System.IntPtr shader, 
					byte* filename);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void shader_release(global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_create(global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_copy(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_copy_id(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_id(
					global::System.IntPtr material, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_release(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_transparency(
					global::System.IntPtr material, 
					global::StereoKit.Transparency__StereoKit mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_cull(
					global::System.IntPtr material, 
					global::StereoKit.Cull__StereoKit mode);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_wireframe(
					global::System.IntPtr material, 
					int wireframe);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_queue_offset(
					global::System.IntPtr material, 
					int offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_float(
					global::System.IntPtr material, 
					byte* name, 
					float value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_color(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Color__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_vector(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Vec4__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_matrix(
					global::System.IntPtr material, 
					byte* name, 
					global::StereoKit.Matrix__StereoKit value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_set_texture(
					global::System.IntPtr material, 
					byte* name, 
					global::System.IntPtr value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_set_texture_id(
					global::System.IntPtr material, 
					ulong id, 
					global::System.IntPtr value);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_get_param_info(
					global::System.IntPtr material, 
					int index, 
					byte** out_name, 
					global::StereoKit.MaterialParam__StereoKit* out_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int material_get_param_count(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void material_set_shader(
					global::System.IntPtr material, 
					global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr material_get_shader(global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.TextStyle__StereoKit text_make_style(
					global::System.IntPtr font, 
					float character_height, 
					global::System.IntPtr material, 
					global::StereoKit.Color32__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void text_add_at(
					byte* text, 
					global::StereoKit.Matrix__StereoKit* transform, 
					int style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void text_add_in(
					byte* text, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.TextFit__StereoKit fit, 
					int style, 
					global::StereoKit.TextAlign__StereoKit position, 
					global::StereoKit.TextAlign__StereoKit align, 
					float off_x, 
					float off_y, 
					float off_z);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit text_size(
					byte* text, 
					int style);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr solid_create(
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* rotation, 
					global::StereoKit.SolidType__StereoKit type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_release(global::System.IntPtr solid);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_add_sphere(
					global::System.IntPtr solid, 
					float diameter, 
					float kilograms, 
					global::StereoKit.Vec3__StereoKit* offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_add_box(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* dimensions, 
					float kilograms, 
					global::StereoKit.Vec3__StereoKit* offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_add_capsule(
					global::System.IntPtr solid, 
					float diameter, 
					float height, 
					float kilograms, 
					global::StereoKit.Vec3__StereoKit* offset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_type(
					global::System.IntPtr solid, 
					global::StereoKit.SolidType__StereoKit type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_enabled(
					global::System.IntPtr solid, 
					int enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_move(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* rotation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_teleport(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* position, 
					global::StereoKit.Quat__StereoKit* rotation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_velocity(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* meters_per_second);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_set_velocity_ang(
					global::System.IntPtr solid, 
					global::StereoKit.Vec3__StereoKit* radians_per_second);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void solid_get_pose(
					global::System.IntPtr solid, 
					global::StereoKit.Pose__StereoKit* out_pose);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create_mem(
					byte* filename, 
					byte* data, 
					int data_size, 
					global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_create_file(
					byte* filename, 
					global::System.IntPtr shader);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_id(
					global::System.IntPtr model, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_release(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_get_material(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr model_get_mesh(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit model_get_transform(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_material(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_mesh(
					global::System.IntPtr model, 
					int subset, 
					global::System.IntPtr mesh);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_transform(
					global::System.IntPtr model, 
					int subset, 
					global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_remove_subset(
					global::System.IntPtr model, 
					int subset);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_add_subset(
					global::System.IntPtr model, 
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int model_subset_count(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_recalculate_bounds(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void model_set_bounds(
					global::System.IntPtr model, 
					global::StereoKit.Bounds__StereoKit* bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Bounds__StereoKit model_get_bounds(global::System.IntPtr model);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sprite_create(
					global::System.IntPtr sprite, 
					global::StereoKit.SpriteType__StereoKit type, 
					byte* atlas_id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sprite_create_file(
					byte* filename, 
					global::StereoKit.SpriteType__StereoKit type, 
					byte* atlas_id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sprite_set_id(
					global::System.IntPtr sprite, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sprite_release(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float sprite_get_aspect(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sprite_draw(
					global::System.IntPtr sprite, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Color32__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sprite_get_width(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sprite_get_height(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit sprite_get_dimensions_normalized(global::System.IntPtr sprite);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void line_add(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec3__StereoKit end, 
					global::StereoKit.Color32__StereoKit color_start, 
					global::StereoKit.Color32__StereoKit color_end, 
					float thickness);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void line_add_listv(
					global::StereoKit.LinePoint__StereoKit* points, 
					int count);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_clip(
					float near_plane, 
					float far_plane);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Matrix__StereoKit render_get_cam_root();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_cam_root(global::StereoKit.Matrix__StereoKit cam_root);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_skytex(global::System.IntPtr sky_texture);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr render_get_skytex();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_set_skylight(global::StereoKit.SphericalHarmonics__StereoKit* lighting_info);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_enable_skytex(int show_sky);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int render_enabled_skytex();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_add_mesh(
					global::System.IntPtr mesh, 
					global::System.IntPtr material, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_add_model(
					global::System.IntPtr model, 
					global::StereoKit.Matrix__StereoKit* transform, 
					global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_blit(
					global::System.IntPtr to_rendertarget, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void render_screenshot(
					global::StereoKit.Vec3__StereoKit from_viewpt, 
					global::StereoKit.Vec3__StereoKit at, 
					int width, 
					int height, 
					byte* file);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void hierarchy_push(global::StereoKit.Matrix__StereoKit* transform);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void hierarchy_pop();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void hierarchy_set_enabled(int enabled);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int hierarchy_is_enabled();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_local_point(global::StereoKit.Vec3__StereoKit* world_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_local_direction(global::StereoKit.Vec3__StereoKit* world_dir);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit hierarchy_to_local_rotation(global::StereoKit.Quat__StereoKit* world_orientation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_world_point(global::StereoKit.Vec3__StereoKit* local_pt);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec3__StereoKit hierarchy_to_world_direction(global::StereoKit.Vec3__StereoKit* local_dir);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Quat__StereoKit hierarchy_to_world_rotation(global::StereoKit.Quat__StereoKit* local_orientation);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_find(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_set_id(
					global::System.IntPtr sound, 
					byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_create(byte* filename);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sound_generate(
					void* function, 
					float duration);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_play(
					global::System.IntPtr sound, 
					global::StereoKit.Vec3__StereoKit at, 
					float volume);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sound_release(global::System.IntPtr sound);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int input_pointer_count(global::StereoKit.InputSource__StereoKit filter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Pointer__StereoKit input_pointer(
					int index, 
					global::StereoKit.InputSource__StereoKit filter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_hand(global::StereoKit.Handed__StereoKit hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_override(
					global::StereoKit.Handed__StereoKit hand, 
					global::StereoKit.HandJoint__StereoKit* hand_joints);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", EntryPoint="input_hand_override", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_override__0(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr hand_joints);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_mouse();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr input_head();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit input_key(global::StereoKit.Key__StereoKit key);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_visible(
					global::StereoKit.Handed__StereoKit hand, 
					int visible);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_solid(
					global::StereoKit.Handed__StereoKit hand, 
					int solid);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_hand_material(
					global::StereoKit.Handed__StereoKit hand, 
					global::System.IntPtr material);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_subscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					void* event_callback);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_unsubscribe(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					void* event_callback);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void input_fire_event(
					global::StereoKit.InputSource__StereoKit source, 
					global::StereoKit.BtnState__StereoKit evt, 
					global::System.IntPtr pointer);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_write(
					global::StereoKit.LogLevel__StereoKit level, 
					byte* text);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_set_filter(global::StereoKit.LogLevel__StereoKit level);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_subscribe(void* on_log);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void log_unsubscribe(void* on_log);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_show_volumes(int show);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_settings(global::StereoKit.UISettings__StereoKit settings);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_set_color(global::StereoKit.Color__StereoKit color);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_layout_area(
					global::StereoKit.Vec3__StereoKit start, 
					global::StereoKit.Vec2__StereoKit dimensions);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.Vec2__StereoKit ui_area_remaining();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_nextline();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_sameline();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static float ui_line_height();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_reserve_box(global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_space(float space);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static ulong ui_push_id(byte* id);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_pop_id();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_is_interacting(global::StereoKit.Handed__StereoKit hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_volume_at(
					byte* id, 
					global::StereoKit.Bounds__StereoKit bounds);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::StereoKit.BtnState__StereoKit ui_interact_volume_at(
					global::StereoKit.Bounds__StereoKit bounds, 
					global::StereoKit.Handed__StereoKit* out_hand);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_at(
					byte* text, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_round_at(
					byte* text, 
					global::System.IntPtr image_sprite, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					float diameter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_toggle_at(
					byte* text, 
					int* pressed, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_hslider_at(
					byte* id, 
					float* value, 
					float min, 
					float max, 
					float step, 
					global::StereoKit.Vec3__StereoKit window_relative_pos, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_label(
					byte* text, 
					int use_padding);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_label_sz(
					byte* text, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_image(
					global::System.IntPtr sprite_image, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button(byte* text);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_sz(
					byte* text, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_button_round(
					byte* id, 
					global::System.IntPtr image, 
					float diameter);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_toggle(
					byte* text, 
					int* pressed);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_toggle_sz(
					byte* text, 
					int* pressed, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_input(
					byte* id, 
					byte* buffer, 
					int buffer_size, 
					global::StereoKit.Vec2__StereoKit size);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_hslider(
					byte* id, 
					float* value, 
					float min, 
					float max, 
					float step, 
					float width);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int ui_handle_begin(
					byte* text, 
					global::StereoKit.Pose__StereoKit* movement, 
					global::StereoKit.Bounds__StereoKit handle, 
					int draw, 
					global::StereoKit.UIMove__StereoKit move_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_handle_end();

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_window_begin(
					byte* text, 
					global::StereoKit.Pose__StereoKit* pose, 
					global::StereoKit.Vec2__StereoKit size, 
					global::StereoKit.UIWin__StereoKit window_type, 
					global::StereoKit.UIMove__StereoKit move_type);

		[global::System.Runtime.InteropServices.DllImport("StereoKitC.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void ui_window_end();
	}

	public unsafe static partial class kernel32_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::System.IntPtr GetStdHandle(int nStdHandle);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					uint* lpMode);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int SetConsoleMode(
					global::System.IntPtr hConsoleHandle, 
					uint dwMode);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int CloseHandle(global::System.IntPtr handle);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int SetThreadErrorMode(
					uint dwNewMode, 
					uint* lpOldMode);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetFileInformationByHandleEx(
					global::System.IntPtr hFile, 
					global::_.Interop_Kernel32_FILE_INFO_BY_HANDLE_CLASS__System_IO_FileSystem FileInformationClass, 
					byte* lpFileInformation, 
					uint dwBufferSize);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::System.IntPtr CreateFile2(
					ushort* lpFileName, 
					int dwDesiredAccess, 
					global::System_IO.FileShare__System_Private_CoreLib dwShareMode, 
					global::System_IO.FileMode__System_Private_CoreLib dwCreationDisposition, 
					global::_.Interop_Kernel32_CREATEFILE2_EXTENDED_PARAMETERS__System_IO_FileSystem* parameters);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="GetFileAttributesExW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetFileAttributesExPrivate(
					ushort* name, 
					global::_.Interop_Kernel32_GET_FILEEX_INFO_LEVELS__System_IO_FileSystem fileInfoLevel, 
					global::_.Interop_Kernel32_WIN32_FILE_ATTRIBUTE_DATA__System_IO_FileSystem* lpFileInformation);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="FindFirstFileExW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static global::System.IntPtr FindFirstFileExPrivate(
					ushort* lpFileName, 
					global::_.Interop_Kernel32_FINDEX_INFO_LEVELS__System_IO_FileSystem fInfoLevelId, 
					global::_.Interop_Kernel32_WIN32_FIND_DATA__System_IO_FileSystem* lpFindFileData, 
					global::_.Interop_Kernel32_FINDEX_SEARCH_OPS__System_IO_FileSystem fSearchOp, 
					global::System.IntPtr lpSearchFilter, 
					int dwAdditionalFlags);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", EntryPoint="FormatMessageW", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int FormatMessage(
					int dwFlags, 
					global::System.IntPtr lpSource, 
					uint dwMessageId, 
					int dwLanguageId, 
					ushort* lpBuffer, 
					int nSize, 
					global::System.IntPtr* arguments);

		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int FindClose(global::System.IntPtr hFindFile);
	}

	public unsafe static partial class _MRT__PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpGetFuncEvalParameterBufferSize();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpGetFuncEvalMode();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpRecordDebuggeeInitiatedHandle(void* objectHandle);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void RhpVerifyDebuggerCleanup();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr RhpGetCurrentThread();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhWaitForPendingFinalizers(int allowReentrantWait);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", EntryPoint="RhYield", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int _RhYield();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void RhFlushProcessWriteBuffers();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", EntryPoint="RhCallDescrWorker", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhCallDescrWorkerNative(global::System.IntPtr callDescr);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memmove(
					byte* dmem, 
					byte* smem, 
					ulong size);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memset(
					byte* mem, 
					int value, 
					ulong size);
	}

	public unsafe static partial class __PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("*", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void CallingConventionConverter_GetStubs(
					global::System.IntPtr* returnVoidStub, 
					global::System.IntPtr* returnIntegerStub, 
					global::System.IntPtr* commonStub);
	}

	public unsafe static partial class api_ms_win_core_winrt_string_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-string-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int WindowsCreateStringReference(
					ushort* sourceString, 
					uint length, 
					global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop* phstringHeader, 
					void* hstring);
	}

	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetLastError();

		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SetLastError(uint dwErrCode);
	}

	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RoInitialize(uint initType);
	}

	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int IsValidLocaleName(ushort* lpLocaleName);

		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ResolveLocaleName(
					ushort* lpNameToResolve, 
					ushort* lpLocaleName, 
					int cchLocaleName);
	}

	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-robuffer-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int RoGetBufferMarshaler(void** bufferMarshalerPtr);
	}

	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-com-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					global::System.IntPtr* ppv);
	}

	public unsafe static partial class OleAut32_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("OleAut32", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SysFreeString(global::System.IntPtr bstr);
	}
}

